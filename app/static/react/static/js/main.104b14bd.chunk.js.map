{"version":3,"sources":["sites/outdated.js","sites/notFound.js","sites/safeLoad.js","components/MainContentDesktop.js","components/MainContentMobile.js","components/MainContent.js","components/Products.js","components/History.js","components/Statistics.js","components/Sidebar.js","components/AppBar.js","components/Help.js","components/AppFooter.js","theme/theme.js","components/SidebarMobile.js","App.js","reportWebVitals.js","index.js"],"names":["Outdated","props","useState","pointer","setPointer","language","useEffect","document","title","window","location","pathname","substr","length","Box","flex","align","justify","gap","Heading","Text","to","border","width","side","color","round","background","NotFound","Image","src","SafeLoad","search","console","log","onClick","replace","MainContentDesktop","direction","fill","Button","icon","Configure","size","setShowSettings","showSettings","setShowCustomURL","setIsPrivate","setShowMaxReferences","setShowRandomizer","pad","horizontal","vertical","Code","TextInput","plain","placeholder","onChange","updateURL","Form","onSubmit","getURL","label","type","Collapsible","open","showResult","createdUrl","answer","message","CheckBox","toggle","showCustomURL","Tag","updateCustomURL","showMaxReferences","Edit","updateMaxRef","isPrivate","Secure","showRandomizer","Select","options","randomOptions","labelKey","valueKey","option","setRandomizer","dropHeight","darkMode","MainContentMobile","MainContent","CustomURL","setCustomURL","MaxReferences","setMaxReferences","Randomizer","setRandomOptions","URLInput","setURLInput","myURL","setURL","setShowResult","setMessage","domain","setCreatedUrl","setAnswer","Anchor","href","value","createShortUrl","a","base","fetch","method","mode","cache","credentials","redirect","referrerPolicy","response","json","dataUrl","hasOwnProperty","url","e","target","preventDefault","level","Products","showProducts","Layer","onClickOutside","setShowProducts","FormClose","margin","overflow","Card","CardBody","weight","History","showWissen","setShowWissen","Statistics","showStatistics","setShowStatistics","statistics","map","entry","reference","short","frequency","Sidebar","getStatistics","dataStat","setStatistics","showSidebar","elevation","Info","Cart","BarChart","AppBar","tag","left","right","style","zIndex","Menu","setShowSidebar","setShowHelp","showHelp","Sun","Moon","setDarkmode","setLanguage","Help","AppFooter","textAlign","pvsTheme","SidebarMobile","App","Grommet","theme","themeMode","full","ResponsiveContext","Consumer","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.104b14bd.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Heading,\n  Text\n} from 'grommet';\n\n\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst Outdated = (props) => {\n\n  const [pointer, setPointer] = useState(\"\")\n  const language = props.language\n\n  useEffect(() => {\n    document.title = \"pvsURL - Link outdated\";\n    setPointer(window.location.pathname.substr(1,(window.location.pathname.length-10)))\n  }, []);\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Heading>{language ? \"Kurze URL abgelaufen\" : \"Short URL Outdated\"}</Heading>\n      <Text>{language ? `Das angefragte Kürzel (${pointer}) wurde nur für eine bestimmte Anzahl an Aufrufen generiert. Bitte versuche ein anderes Kürzel.`:`The requested Tag (${pointer}) was only generated for a limited number of requests. Please try another one.`}</Text>\n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='medium' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          {language ? \"Nochmal versuchen\" : \"Try Again\"}\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  );\n}\n\n\nexport default Outdated;\n","import React, { useEffect } from 'react';\nimport { \n  Box, \n  Image\n} from 'grommet';\n\n\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst NotFound = (props) => {\n  const language = props.language\n\n  useEffect(() => {\n    document.title = \"pvsURL - 404\";\n  }, []);\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Image src=\"/images/404\"/>\n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='medium' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          {language ? \"Nochmal versuchen\" : \"Try Again\"}\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  )\n}\n\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Text,\n  Heading\n} from 'grommet';\nimport { Link } from 'react-router-dom'\n\nconst SafeLoad = (props) => {\n\n  const [pointer, setPointer] = useState('')\n  const language = props.language\n\n  useEffect(() => {\n    document.title = \"pvsURL - Safe Opener\";\n    const pathname = window.location.pathname + window.location.search\n    console.log(pathname)\n    setPointer(`${pathname.substr(10,pathname.length)}`)\n  }, []);\n\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Heading>{language ? \"Bist du sicher?\" : \"Are you sure?\"}</Heading>\n      <Text>{language ? `Die kurze URL referenziert auf ${pointer}. Möchtest du fortfahren?`:`The short url points to ${pointer}. Do you want to continue?`}</Text>\n      \n      <Box\n        border=\"small\"\n        onClick={()=> window.location.replace(pointer)}\n        >\n          <Box \n          width='small' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          {language ? \"Ja\" : \"Yes\"}\n          </Box>\n        </Box>\n\n      \n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='small' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          {language ? \"Nein\" : \"No\"}\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  );\n}\n\n\nexport default SafeLoad;\n","import { Box, Button, Collapsible, Form, CheckBox, TextInput, Text, Select } from \"grommet\";\nimport { Configure, Code, Edit, Secure, Tag } from 'grommet-icons';\n\n\n\nconst MainContentDesktop = props => {\n\nreturn(\n    <Box gap='small'>\n        \n        \n        <Box direction='row' fill='horizontal'>\n            <Button \n            icon={<Configure color='dark-1'/>}\n            color='brand'\n            size='small'\n            onClick={() => {props.setShowSettings(!props.showSettings);\n            props.setShowCustomURL(false);\n            props.setIsPrivate(false);\n            props.setShowMaxReferences(false);\n            props.setShowRandomizer(false);\n            }}\n            />\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"center\"\n            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n            round=\"small\"\n            border={{\n                side: 'all',\n                color: 'brand',\n            }}\n            >\n                <Code color='brand'/>\n                <TextInput \n                plain\n                placeholder={props.language ? 'Füge deinen Link ein...' : 'Enter your URL...'}\n                onChange={props.updateURL}\n                /> \n            </Box>\n\n            <Form onSubmit={props.getURL}>\n                <Button\n                color='brand'\n                label={props.language ? 'Verkürzen':'Shorten'}\n                type='submit'\n                fill='true'\n                />\n            </Form>\n        \n        </Box>\n\n        <Collapsible direction='vertical' open={props.showResult}>\n            <Box\n            width='large'\n            >\n                \n                {(() => {\n                if (props.createdUrl.length>0) {\n                    return (\n                    props.answer\n                    )\n                } else {\n                    return (\n                    <Text size='medium' color='test'>{props.message}</Text>\n                    )\n                } \n                })()}\n                \n            </Box>\n        </Collapsible>\n\n        <Collapsible direction='vertical' open={props.showSettings}>\n        <Box\n        flex\n        direction='column'\n        align='center'\n        justify='center'\n        gap='medium'\n        >\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"center\"\n            gap='medium'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Individueller Tag' : 'Custom tag'}\n                    onClick={() => props.setShowCustomURL(!props.showCustomURL)}\n                />\n                <Collapsible direction='horizontal' open={props.showCustomURL}>\n                    <Box width='large' direction='row' justify='end'>\n                        <Box\n                            width=\"medium\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify='end'\n                            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                            round=\"small\"\n                            border={{\n                            side: 'all',\n                            color: 'brand',\n                            }}\n                        >\n                            <Tag color='brand'/>\n                            <TextInput \n                            plain\n                            placeholder={props.language ? 'Gib deinen individuellen Tag ein...' : 'Enter custom tag...'}\n                            onChange={props.updateCustomURL}\n                            /> \n                        </Box>\n                    </Box>\n                </Collapsible>\n            </Box>\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"center\"\n            gap='medium'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Limit an Aufrufen setzen':'Set max. references'}\n                    onClick={() => props.setShowMaxReferences(!props.showMaxReferences)}\n                />\n                <Collapsible direction='horizontal' open={props.showMaxReferences}>\n                    <Box width='large' direction='row' justify='end'>\n                        <Box\n                            width=\"medium\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify='end'\n                            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                            round=\"small\"\n                            border={{\n                            side: 'all',\n                            color: 'brand',\n                            }}\n                        >\n                            <Edit color='brand'/>\n                            <TextInput \n                            plain\n                            placeholder={props.language ? 'Gib die Anzahl der maximalen Aufrufe ein...' : 'Enter max. References...'}\n                            onChange={props.updateMaxRef}\n                            /> \n                        </Box>\n                    </Box>\n                </Collapsible>\n            </Box>\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"start\"\n            gap='small'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Privat setzen' : 'Is private'}\n                    onClick={() => props.setIsPrivate(!props.isPrivate)}\n                />\n                <Collapsible direction='horizontal' open={props.isPrivate}>\n                    <Secure color='brand'/>\n                </Collapsible>\n            </Box>\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"center\"\n            gap='medium'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Speziellen Zufallsgenerator' : 'Special randomizer'}\n                    onClick={() => props.setShowRandomizer(!props.showRandomizer)}\n                />\n                <Collapsible direction='horizontal' open={props.showRandomizer}>\n                    <Box width='large' direction='row' justify='end'>\n                        <Box\n                            width=\"medium\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify='start'\n                            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                            round=\"small\"\n                            border={{\n                            side: 'all',\n                            color: 'brand',\n                            }}\n                        >\n                            <Tag color='brand'/>\n                            <Select \n                            placeholder={props.language ? 'Auswählen Zufallsgenerator...' : 'Select randomizer...'}\n                            options={props.randomOptions}\n                            labelKey=\"label\"\n                            valueKey=\"value\"\n                            onChange={({ option }) => props.setRandomizer(option)}\n                            dropHeight='small'\n                            background={props.darkMode ? \"dark\" : \"light\"}\n                            plain\n                            />\n                        </Box>\n                    </Box>\n                </Collapsible>\n            </Box>\n        </Box>\n        </Collapsible>\n    \n    </Box>\n)\n}\n\nexport default MainContentDesktop","import { Box, Button, Collapsible, Form, CheckBox, TextInput, Text, Select } from \"grommet\";\nimport { Configure, Code, Edit, Secure, Tag } from 'grommet-icons';\n\n\n\nconst MainContentMobile = props => {\n\nreturn(\n    <Box gap='small'>\n       <Box direction='column' gap='small' justify='start' fill='horizontal'>\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"center\"\n            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n            round=\"small\"\n            border={{\n                side: 'all',\n                color: 'brand',\n            }}\n            >\n                <Code color='brand'/>\n                <TextInput \n                plain\n                placeholder={props.language ? 'Füge deinen Link ein...' : 'Enter your URL...'}\n                onChange={props.updateURL}\n                /> \n            </Box>\n\n            <Form onSubmit={props.getURL}>\n                <Button\n                color='brand'\n                label={props.language ? 'Verkürzen':'Shorten'}\n                type='submit'\n                fill='true'\n                />\n            </Form>\n\n            <Button \n            icon={<Configure color='dark-1'/>}\n            color='brand'\n            size='small'\n            onClick={() => {props.setShowSettings(!props.showSettings);\n            props.setShowCustomURL(false);\n            props.setIsPrivate(false);\n            props.setShowMaxReferences(false);\n            props.setShowRandomizer(false);\n            }}\n            />\n        </Box>\n        \n\n        <Collapsible direction='vertical' open={props.showResult}>\n            <Box\n            width='large'\n            >\n                \n                {(() => {\n                if (props.createdUrl.length>0) {\n                    return (\n                    props.answer\n                    )\n                } else {\n                    return (\n                    <Text size='medium' color='test'>{props.message}</Text>\n                    )\n                } \n                })()}\n                \n            </Box>\n        </Collapsible>\n\n        <Collapsible direction='vertical' open={props.showSettings}>\n        <Box\n        flex\n        direction='column'\n        align='start'\n        justify='center'\n        gap='medium'\n        fill='horizontal'\n        >\n            <Box\n            width=\"large\"\n            direction=\"column\"\n            align=\"start\"\n            gap='medium'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Individueller Tag' : 'Custom tag'}\n                    onClick={() => props.setShowCustomURL(!props.showCustomURL)}\n                />\n                <Collapsible direction='column' open={props.showCustomURL}>\n                    <Box width='large' direction='column' justify='end'>\n                        <Box\n                            width=\"medium\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify='end'\n                            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                            round=\"small\"\n                            border={{\n                            side: 'all',\n                            color: 'brand',\n                            }}\n                        >\n                            <Tag color='brand'/>\n                            <TextInput \n                            plain\n                            placeholder={props.language ? 'Gib deinen individuellen Tag ein...' : 'Enter custom tag...'}\n                            onChange={props.updateCustomURL}\n                            /> \n                        </Box>\n                    </Box>\n                </Collapsible>\n            </Box>\n            <Box\n            width=\"large\"\n            direction=\"column\"\n            align=\"start\"\n            gap='medium'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Limit an Aufrufen setzen':'Set max. references'}\n                    onClick={() => props.setShowMaxReferences(!props.showMaxReferences)}\n                />\n                <Collapsible direction='column' open={props.showMaxReferences}>\n                    <Box width='large' direction='column' justify='end'>\n                        <Box\n                            width=\"medium\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify='end'\n                            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                            round=\"small\"\n                            border={{\n                            side: 'all',\n                            color: 'brand',\n                            }}\n                        >\n                            <Edit color='brand'/>\n                            <TextInput \n                            plain\n                            placeholder={props.language ? 'Gib die Anzahl der maximalen Aufrufe ein...' : 'Enter max. References...'}\n                            onChange={props.updateMaxRef}\n                            /> \n                        </Box>\n                    </Box>\n                </Collapsible>\n            </Box>\n            <Box\n            width=\"large\"\n            direction=\"row\"\n            align=\"start\"\n            gap='small'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Privat setzen' : 'Is private'}\n                    onClick={() => props.setIsPrivate(!props.isPrivate)}\n                />\n                <Collapsible direction='horizontal' open={props.isPrivate}>\n                    <Secure color='brand'/>\n                </Collapsible>\n            </Box>\n            <Box\n            width=\"large\"\n            direction=\"column\"\n            align=\"start\"\n            gap='medium'\n            >\n                <CheckBox\n                    toggle\n                    label={props.language ? 'Speziellen Zufallsgenerator' : 'Special randomizer'}\n                    onClick={() => props.setShowRandomizer(!props.showRandomizer)}\n                />\n                <Collapsible direction='column' open={props.showRandomizer}>\n                    <Box width='large' direction='column' justify='end'>\n                        <Box\n                            width=\"medium\"\n                            direction=\"row\"\n                            align=\"center\"\n                            justify='start'\n                            pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                            round=\"small\"\n                            border={{\n                            side: 'all',\n                            color: 'brand',\n                            }}\n                        >\n                            <Tag color='brand'/>\n                            <Select \n                            placeholder={props.language ? 'Auswählen Zufallsgenerator...' : 'Select randomizer...'}\n                            options={props.randomOptions}\n                            labelKey=\"label\"\n                            valueKey=\"value\"\n                            onChange={({ option }) => props.setRandomizer(option)}\n                            dropHeight='small'\n                            background={props.darkMode ? \"dark\" : \"light\"}\n                            plain\n                            />\n                        </Box>\n                    </Box>\n                </Collapsible>\n            </Box>\n        </Box>\n        </Collapsible>\n    \n    </Box>\n)\n}\n\nexport default MainContentMobile","import React, { useEffect, useState } from 'react';\nimport { \n  Anchor,\n  Box, \n  Heading, \n  Text\n} from 'grommet';\nimport MainContentDesktop from './MainContentDesktop'\nimport MainContentMobile from './MainContentMobile'\n\n\nconst MainContent = (props) => {\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCustomURL, setShowCustomURL] = useState(false);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [showMaxReferences, setShowMaxReferences] = useState(false);\n  const [showRandomizer, setShowRandomizer] = useState(false);\n  const [CustomURL, setCustomURL] = useState('');\n  const [MaxReferences, setMaxReferences] = useState(-1);\n  const [Randomizer, setRandomizer] = useState(1);\n  const [randomOptions, setRandomOptions] = useState([]);\n\n  const [URLInput, setURLInput] = useState('');\n  const [myURL, setURL] = useState('');\n\n\n  const [showResult, setShowResult] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const language = props.language\n  const [createdUrl, setCreatedUrl] = useState(`${props.domain}`);\n  const [answer, setAnswer] = useState(<Text size='medium' color='brand'>Your URL was created</Text>);\n\n\n\n  useEffect(() => {\n    document.title = \"pvsURL\";\n    if(props.language){\n      setAnswer(<Text size='medium' color='brand'>Deine kurze URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> wurde erstellt</Text>) \n      setRandomOptions([\n        { label: 'Standard', value: 1 },\n        { label: 'Großbuchstaben', value: 2 },\n        { label: 'Kleinbuchstaben', value: 3 },\n        { label: 'Zahlen', value: 4 },\n      ])\n    }else {\n      setAnswer(<Text size='medium' color='brand'>Your URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> was created</Text>)\n      setRandomOptions([\n        { label: 'Default', value: 1 },\n        { label: 'Uppercase', value: 2 },\n        { label: 'Lowercase', value: 3 },\n        { label: 'Numbers', value: 4 },\n      ])\n    }\n\n  },[language])\n\n  useEffect(() => {\n    createShortUrl();\n  }, [myURL]);\n\n  const createShortUrl = async () => {\n    var base = `/api/create?url=${myURL}`;\n    if(showCustomURL){\n      base= base + `&custom=${CustomURL}`;\n    }\n    if(isPrivate){\n      base= base + \"&private=1\";\n    }\n    if(showMaxReferences){\n      base=base + `&refs_available=${MaxReferences}`;\n    }\n    if(showRandomizer){\n      base=base + `&random_method=${Randomizer.value}`;\n    }else{\n      base=base + `&random_method=1`;\n    }\n    if(myURL.length>4){\n    try{\n      const response = await fetch(base, {method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        });\n      const dataUrl = await response.json();\n      setMessage(dataUrl.message);\n      if(dataUrl.hasOwnProperty('url')){\n        setCreatedUrl(dataUrl.url);\n        if(language){\n          setAnswer(<Text size='medium' color='brand'>Deine kurze URL <Anchor href={dataUrl.url} label={dataUrl.url} color='brand'/> wurde erstellt</Text>) \n        }else {\n          setAnswer(<Text size='medium' color='brand'>Your URL <Anchor href={dataUrl.url} label={dataUrl.url} color='brand'/> was created</Text>)\n        }\n      }\n    } catch(error){\n      setMessage(\"Error connecting to Backend\")\n      setAnswer(message)\n    }\n    \n    }\n    console.log(Randomizer);\n  };\n\n  \n\n  const updateURL = e => {\n    setURLInput(e.target.value);\n  };\n  const updateMaxRef = e => {\n    setMaxReferences(e.target.value);\n  };\n  const updateCustomURL = e => {\n    setCustomURL(e.target.value);\n  };\n  \n  const getURL = e => {\n    e.preventDefault();\n    setURL(URLInput);\n    setShowResult(true);\n  };\n\n  const size=props.size;\n\n  return(\n  <Box\n  flex\n  align='center'\n  justify='center'\n  gap='medium'\n  background={props.darkMode ? \"dark\" : \"light\"}\n  >\n    \n    <Heading level='1'>PerVerSo Shorter URLs</Heading>\n    <Box direction='row' gap='small'>\n\n     {props.size!==\"small\" ? (\n    <MainContentDesktop\n      message={message}\n      createdUrl={createdUrl}\n      darkMode={props.darkMode}\n      setRandomizer={setRandomizer}\n      randomOptions={randomOptions}\n      language={language}\n      showRandomizer={showRandomizer}\n      setShowRandomizer={setShowRandomizer}\n      isPrivate={isPrivate}\n      setIsPrivate={setIsPrivate}\n      updateMaxRef={updateMaxRef}\n      showMaxReferences={showMaxReferences}\n      setShowMaxReferences={setShowMaxReferences}\n      updateCustomURL={updateCustomURL}\n      showCustomURL={showCustomURL}\n      setShowCustomURL={setShowCustomURL}\n      showSettings={showSettings}\n      showResult={showResult}\n      getURL={getURL}\n      updateURL={updateURL}\n      setShowSettings={setShowSettings}\n      answer={answer}\n\n      \n    /> ):( \n      <MainContentMobile\n        message={message}\n        createdUrl={createdUrl}\n        darkMode={props.darkMode}\n        setRandomizer={setRandomizer}\n        randomOptions={randomOptions}\n        language={language}\n        showRandomizer={showRandomizer}\n        setShowRandomizer={setShowRandomizer}\n        isPrivate={isPrivate}\n        setIsPrivate={setIsPrivate}\n        updateMaxRef={updateMaxRef}\n        showMaxReferences={showMaxReferences}\n        setShowMaxReferences={setShowMaxReferences}\n        updateCustomURL={updateCustomURL}\n        showCustomURL={showCustomURL}\n        setShowCustomURL={setShowCustomURL}\n        showSettings={showSettings}\n        showResult={showResult}\n        getURL={getURL}\n        updateURL={updateURL}\n        setShowSettings={setShowSettings}\n        answer={answer}\n      />\n    )}\n\n    </Box>\n\n  </Box>\n  );\n}\n\nexport default MainContent;","import React from 'react';\nimport { \n  Box, \n  Button,\n  Card,\n  CardBody,\n  Collapsible,\n  Layer,\n  Heading, \n  Text\n} from 'grommet';\nimport { \n  FormClose\n} from 'grommet-icons';\n\n\nconst Products = props => {\n    const language = props.language\n\nreturn (\n\n<Collapsible open={props.showProducts}>\n      <Layer onClickOutside={() => props.setShowProducts(false)}>\n        {/* <Box direction='column' fill align='start'>   */}\n          <Box>\n            <Button\n            icon={<FormClose color='lightgrey'/>}\n            onClick={()=>props.setShowProducts(false)}\n            fill\n            />\n          </Box>\n          <Box direction='column' fill pad='large' gap='medium'> \n            <Box direction='horizontal' fill='horizontal' justify='center' align='center'>\n              <Heading level='2' margin=\"medium\" fill>{language ? \"Produkte von PerVerSo\" : \"PerVerSo Products\"}</Heading>\n            </Box>\n\n\n            <Box fill gap='medium' margin='medium' overflow={{\"vertical\": \"scroll\"}}>\n              \n              <Card flex='false'>\n                <CardBody>\n                <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n                  <Box>\n                    <Text size='large' weight=\"bold\">\n                      PerVerSo\n                    </Text>\n                    <Text size='medium'>{ language ? \"Personalverwaltungssoftware, basierend auf Java\" : \"Employee management software, based on Java\"}</Text>\n                  </Box>\n                </Box>\n                </CardBody>\n              </Card>\n              \n              <Card flex='false'>\n                <CardBody>\n                <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n                  <Box>\n                    <Text size='large' weight=\"bold\">\n                      PerVerSo MSO\n                    </Text>\n                    <Text size='medium'>{language ? \"Personalverwaltungssoftware, implementiert in Microsoft Excel\" : \"Employee management software, based on Microsoft Excel\" }</Text>\n                  </Box>\n                </Box>\n                </CardBody>\n              </Card>\n              \n              <Card flex='false'>\n                <CardBody>\n                <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n                  <Box>\n                    <Text size='large' weight=\"bold\">\n                      PerVerSo MSO AEP\n                    </Text>\n                    <Text size='medium'>{language ? \"Personalverwaltungssoftware, in Microsoft Excel zur Einsatzplanung von Auszubildenden\" : \"Employee management software, based on Microsoft Excel and mainly used for planning of trainees\"}</Text>\n                  </Box>\n                </Box>\n                </CardBody>\n              </Card>\n              \n              <Card flex='false'>\n                <CardBody>\n                <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n                  <Box>\n                    <Text size='large' weight=\"bold\">\n                      Weatherplans\n                    </Text>\n                    <Text size='medium'>{language ? \"Wettervorhersage zum Testen von APIs\" : \"Testing APIs results in a weather forecast\"}</Text>\n                  </Box>\n                </Box>\n                </CardBody>\n              </Card>\n              \n              <Card flex='false'>\n                <CardBody>\n                <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'> \n                  <Box>\n                    <Text size='large' weight=\"bold\">\n                      OLE (Kooperation)\n                    </Text>\n                    <Text size='medium'>{language ? \"Der Online LaTeX Editor mit kollaborativen Möglichkeiten zum Selfhosting\": \"The online LaTeX editor with collaborative possibilities with the chance for selfhosting\"}</Text>\n                  </Box>\n                </Box>\n                </CardBody>\n              </Card>\n\n            </Box>\n          </Box>\n        {/* </Box> */}\n    </Layer> \n</Collapsible>\n    \n)}\n\nexport default Products;","import React from 'react';\nimport { \n  Box, \n  Button,\n  Collapsible,\n  Layer,\n  Heading, \n  Text\n} from 'grommet';\nimport { \n  FormClose\n} from 'grommet-icons';\n\n\n\nconst History = props => {\n    const language = props.language\n\n\n    return (\n    <Collapsible open={props.showWissen}>\n      <Layer onClickOutside={() => props.setShowWissen(false)}>\n        <Box>\n          <Button\n          icon={<FormClose color='lightgrey'/>}\n          onClick={()=>props.setShowWissen(false)}\n          />\n        </Box>\n\n        <Box direction='column' fill pad='large' gap='medium'>\n          <Box direction='horizontal' fill='horizontal' justify='center' align='center'>\n            <Heading level='2' margin=\"medium\" fill>{language ? \"Entstehung\" : \"How it started\"}</Heading>\n          </Box>\n\n          <Text size='medium'>\n            {language ? `PerVerSo war ursprünglich ein studentisches Softwareprojekt für eine Personalverwaltungssoftware. Im Laufe der Zeit kamen weitere Projekte hinzu, sodass sich PerVerSo nach und nach zu einer Marke etabliert hat.\n            Für die Entwicklergruppe steht dabei stets der Nutzende im Vordergrund, wobei ein gewisser Humor nicht verloren gegangen ist.` : `PerVerSo was a fun project during a study. It's the short version for the german version of employee management software\n            Over time the fun project got a brand. Fun is one of the important things for the developer team.`}\n          </Text>\n        </Box>\n\n      </Layer>\n    </Collapsible>\n    )\n}\n\nexport default History;","import React from 'react';\nimport { \n  Box, \n  Button,\n  Card,\n  CardBody,\n  Collapsible,\n  Layer,\n  Heading, \n  Text\n} from 'grommet';\nimport { \n  FormClose\n} from 'grommet-icons';\n\n\n\nconst Statistics = props => {\n    const language = props.language\n\n    return (\n\n    <Collapsible open={props.showStatistics}>\n      <Layer onClickOutside={() => props.setShowStatistics(false)}>\n        {/* <Box fill direction='column' align='start'> */}\n          <Box>\n              <Button fill\n              icon={<FormClose color='lightgrey'/>}\n              onClick={()=>props.setShowStatistics(false)}\n              />\n          </Box>\n            \n          <Box direction='column' fill pad='large' gap='medium'>\n            <Box direction='horizontal' fill='horizontal' justify='center' align='center'>\n                <Heading level='2' margin=\"medium\" >{language ? \"Statistiken\" : \"Statistics\"}</Heading>\n            </Box>\n            \n            <Box fill gap='medium' margin='medium' overflow={{\"vertical\": \"scroll\"}} >\n              {props.statistics.map(entry => (\n                <Card flex='false'>\n                  <CardBody>\n                    <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n                        <Box onClick={() => window.open(entry.reference)} >\n                          <Text size='large' weight=\"bold\" color='test'>\n                            {entry.short} </Text><Text size='large' weight='bold'>{language ? `mit ${entry.frequency} Aufrufen` : `with ${entry.frequency} Clicks`}</Text>\n                          <Text size='medium'>{language ? `Dieser Tag referenziert auf ${entry.reference}` : `This tag references to ${entry.reference}`}</Text>\n                        </Box>\n                    </Box>\n                  </CardBody>\n                </Card>\n              ))}\n            </Box>\n          </Box>\n        {/* </Box> */}\n      </Layer>\n    </Collapsible>\n\n    )\n}\nexport default Statistics;","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Card,\n  CardBody,\n  Collapsible,\n  Heading, \n  Text\n} from 'grommet';\nimport { \n  BarChart,\n  Cart,\n  Info\n} from 'grommet-icons';\nimport Products from './Products';\nimport History from './History';\nimport Statistics from './Statistics'\n\n\n\nconst Sidebar = (props) => {\n  const [showWissen, setShowWissen] = useState(false);\n  const [showProducts, setShowProducts] = useState(false);\n  const language = props.language\n\n  useEffect(() => {\n    getStatistics();\n  }, [props.showStatistics])\n\n  const getStatistics = async ()=> {\n    const response = await fetch(`/api/statistics`)\n    const dataStat = await response.json();\n    props.setStatistics(dataStat);\n  }\n  \n  return(\n  <Collapsible direction='horizontal' open={props.showSidebar}>\n  <Box\n  flex\n  width='medium'\n  background='dark'\n  elevation='small'\n  align='center'\n  justify='start'\n  gap='medium'\n  >\n    <Heading level='2'>{language ? \"Wissenswertes\" : \"Nice to know\"}</Heading>\n    <Card onClick={()=>setShowWissen(!showWissen)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Info color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Historie\" : \"PerVerSo History\"}\n            </Text>\n            <Text size='medium'>{language ? \"Wie alles begann\" : \"How it started\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n\n    <Card onClick={()=>setShowProducts(!showProducts)}>\n      <CardBody>\n      <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Cart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Produkte\" : \"PerVerSo Products\"}\n            </Text>\n            <Text size='medium'>{language ? \"Produktportfolio\" : \"Products\"}</Text>\n          </Box>\n        </Box>\n      </CardBody>\n    </Card>\n\n    <Card onClick={()=>props.setShowStatistics(!props.showStatistics)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <BarChart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"Statistiken\" : \"Statistics\"}\n            </Text>\n            <Text size='medium'>{language ? \"Lass dir die TOP 10 der verkürzten Links anzeigen.\" : \"The TOP 10 shortened urls.\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n    <Products \n      setShowProducts={setShowProducts} \n      showProducts={showProducts}\n      language={language}\n      />\n    <Statistics\n      setShowStatistics={props.setShowStatistics}\n      showStatistics={props.showStatistics}\n      statistics={props.statistics}\n      language={language}\n    />\n    <History\n      setShowWissen={setShowWissen}\n      showWissen={showWissen}\n      language={language}\n    />\n    \n  </Box>\n</Collapsible>\n  \n)\n}\n\nexport default Sidebar;","import React from 'react';\nimport { \n\n  Box,\n  Button\n\n} from 'grommet';\nimport { Menu, Sun, Moon } from 'grommet-icons';\n\nconst AppBar = (props) => (\n    <Box\n      tag='header'\n      direction='row'\n      align='center'\n      justify='between'\n      background='brand'\n      color='text'\n      pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n      style={{ zIndex: '1' }}\n      {...props}\n  >\n    <Button \n      color='brand'\n      icon={<Menu color='text'/>}\n      onClick={() => props.setShowSidebar(!props.showSidebar)}\n    />\n    <Box\n    direction=\"row\"\n    align=\"end\"\n    >\n      <Button \n        color='brand'\n        label={props.language ? 'Anleitung' : 'Help'}\n        onClick={() => props.setShowHelp(!props.showHelp)}\n      />\n      <Button\n        color='brand' \n        icon={props.darkMode ? <Sun/> : <Moon/> }\n        onClick={() => props.setDarkmode(!props.darkMode)\n        }\n      />\n      <Button\n        color='brand'\n        label={props.language ? \"DE\" : \"EN\"}\n        onClick={() => props.setLanguage(!props.language)}\n      />\n    </Box>\n  </Box>\n);\n\nexport default AppBar;","import { \n    \n    Box,\n    Button,\n    Collapsible,\n    Heading,\n    Layer,\n    Text\n\n } from 'grommet';\n import { FormClose } from 'grommet-icons';\nimport React from 'react';\n\nconst Help = props => {\n    const language = props.language\n    \n    return(\n    <Collapsible direction='horizontal' open={props.showHelp}>\n        <Layer>\n        <Box>\n            <Button\n            icon={<FormClose color='lightgrey'/>}\n            onClick={()=>props.setShowHelp(false)}\n            />\n        </Box>\n        <Box margin='medium' overflow={{\"vertical\": \"scroll\"}} >\n            <Heading level='2'>{language ? \"Anleitung\" : \"Manual\"}</Heading>\n            {props.language ?(\n                <Text>Geben Sie die gewünschte <b>URL</b> in das Eingabefeld ein und drücken Sie anschließend auf <b>shorten</b>. Es wird eine zufällige kurze URL mit der Domain perver.so erzeugt.\n                Möchten Sie einen eigenen Namen wählen oder die Konditionen verändern, drücken Sie bitte auf das <b>Werkzeug-Symbol</b> links vom Eingabefeld. Es öffnen sich nun weitere Optionen:<br />\n                <br /><b>Custom Tag:</b> Wenn Sie den Schalter nach rechts schieben (anklicken), können Sie im neuen Eingabefeld einen eigenen URL Tag angeben. (https://perver.so/[ihr persönlicher tag])\n                <br/><br/><b>Max References:</b> Wenn diese Option gewählt ist, können Sie die Nutzungszahl für den erstellenden Link angeben. Nachdem das Limit erreicht wurde, wird Ihre URL überschrieben, das Tag bleibt jedoch bestehen.\n                <br/><br/><b>Private:</b> Wenn diese Option gewählt ist, wird die gekürzte URL nicht in der Statistik erfasst. Wenn neben der Option ein Schloss erscheint, ist der Link privat.\n                <br/><br/><b>Special Randomizer:</b> Wenn diese Option gewählt ist, können Optionen für die zufällige Tag Vergabe gewählt werden:\n                <br/>- Default (Großbuchstaben, Kleinbuchstaben, Zahlen) [1]\n                <br/>- nur Großbuchstaben [2]\n                <br/>- nur Kleinbuchstaben [3]\n                <br/>- nur Zahlen [4]\n                <br/><br/><b>API:</b> Wollen Sie die API nutzen, so können Sie einen GET Request an https://perver.so/api/create stellen.\n                <br/><b>Parameter:</b>\n                <br/>-url [required] string\n                <br/>-custom [optional] string \n                <br/>-private [optional] 0 oder 1\n                <br/>-refs_available [optional] int (default= -1)\n                <br/>-random_method [optional] int (default= 1)\n                <br/><br/><b>Beispiel Anfrage:</b>\n                <br/>GET https://perver.so/api/create?url=https://perver.so&custom=foo</Text>\n            ):(\n                <Text>Please enter your <b>URL</b> into the input field. In effect press the <b>shorten</b> button. Your random short URL with the Domain perver.so gets created.\n                If you want to use your own custom tag or change the conditions please press the <b>wrench symbol</b> on the left side of the input field. Now there are multiple options available:<br />\n                <br /><b>Custom Tag:</b> If you choose the option you can enter your custom tag. (https://perver.so/[ihr persönlicher tag])\n                <br/><br/><b>Max References:</b> If you chosse the option, you can enter a number. If the short url was opened as often as your number, the url gets updated and you can't access the original url.\n                <br/><br/><b>Private:</b>If you choose the option, the url will not be recorded in the statistics. If there is a lock next to the option then the link is private.\n                <br/><br/><b>Special Randomizer:</b> If you choose the option, then you can choose which randomizer should be used when creating a short url.\n                <br/>- default (uppercase, lowercase, numbers) [1]\n                <br/>- just uppercase [2]\n                <br/>- just lowercase [3]\n                <br/>- just numbers [4]\n                <br/><br/><b>API:</b> If you want to use the API, you can make a GET Request to https://perver.so/api/create\n                <br/><b>Options:</b>\n                <br/>-url [required] string\n                <br/>-custom [optional] string \n                <br/>-private [optional] 0 oder 1\n                <br/>-refs_available [optional] int (default= -1)\n                <br/>-random_method [optional] int (default= 1)\n                <br/><br/><b>Sample Request:</b>\n                <br/>GET https://perver.so/api/create?url=https://perver.so&custom=foo</Text>\n            )}\n        </Box>\n        </Layer>\n    </Collapsible>\n    )\n}\n\nexport default Help;","import React from 'react';\nimport {\n    Box,\n    Image,\n    Text\n} from 'grommet';\n\n\nconst AppFooter = props => {\n\n    return(\n      <Box\n        tag='footer'\n        direction='row'\n        align='center'\n        justify='between'\n        background='brand'\n        color='text'\n        pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n        elevation='medium' \n        style={{ zIndex: '1' }}\n\n        {...props}\n      >\n        <Text textAlign=\"center\" size=\"medium\" color='text'>\n          © 2021 Copyright PerVerSo\n        </Text>\n        <Box\n        direction='row'\n        justify='end'\n        >\n          {props.darkMode ? (\n            <Image src=\"/images/logo/dark\"/>\n          ) :(\n            <Image src=\"/images/logo/light\"/>\n          )}\n        </Box>\n      </Box>\n    )\n\n}\n\nexport default AppFooter;","export const pvsTheme = {\n    \"global\": {\n      \"drop\":{\n        \"background\": \"#444444\",\n        \"shadowSize\": \"medium\"\n      },\n      \"colors\": {\n        \"brand\": \"#6496FA\",\n        \"test\": \"red\",\n        \"text\": {\n          \"dark\": \"light-1\",\n          \"light\": \"dark-1\"\n        }\n      },\n      \"font\": {\n        \"family\": \"Arial\",\n        \"size\": \"20px\",\n        \"height\": \"20px\"\n      },\n      \"focus\":{\n        \"border\":{\n          \"color\": \"text\"\n        },\n        \"outline\": {\n          \"color\": \"None\"\n        }\n      },\n      \"hover\":{\n        \"background\": {\"color\": \"text\", \"opacity\": \"medium\"}\n      },\n      \"input\": {\n        \"weight\": 400\n      }\n    },\n    \"checkBox\":{\n      \"hover\":{\n        \"border\":{\n          \"color\":\"brand\"\n        }\n      },\n      \"color\":{\n        \"dark\": \"brand\"\n      },\n      \"border\":{\n        \"color\": \"brand\"\n      },\n      \"toggle\":{\n        \"color\":{\n          \"light\": \"brand\"\n        }\n      }\n    },\n    \"card\": {\n      \"container\": {\n        \"background\": {\"dark\":\"dark-2\",\n                    \"light\": \"light-3\"},\n        \"elevation\": \"none\"\n      },\n      \"footer\": {\n        \"background\": {\"dark\": \"dark-3\",\n        \"light\": \"light-3\"}\n      }\n    },\n    \"select\":{\n      \"options\":{\n        \"container\":{\n          \"background\": \"brand\"\n        }\n      }\n    },\n    \"button\": {\n      \"border\":{\n        \"radius\": \"12px\"\n      },\n      \"default\": {\n        \"background\":{\n          \"color\": {\n            \"dark\": \"brand\",\n            \"light\": \"brand\"\n        }\n      },\n      \"color\": {\n        \"dark\":\"light-1\", \n        \"light\": \"dark-1\"\n      }\n    }\n  }\n}","import React, { useState, useEffect } from 'react';\nimport { \n    Button,\n  Box, \n  Card,\n  CardBody,\n  Layer,\n  Heading, \n  Text,\n  Collapsible\n} from 'grommet';\nimport { \n  BarChart,\n  FormClose,\n  Cart,\n  Info\n} from 'grommet-icons';\nimport Products from './Products';\nimport History from './History';\nimport Statistics from './Statistics'\n\n\n\nconst SidebarMobile = (props) => {\n  const [showWissen, setShowWissen] = useState(false);\n  const [showProducts, setShowProducts] = useState(false);\n  const language = props.language\n\n  useEffect(() => {\n    getStatistics();\n  }, [props.showStatistics])\n\n  const getStatistics = async ()=> {\n    const response = await fetch(`/api/statistics`)\n    const dataStat = await response.json();\n    props.setStatistics(dataStat);\n  }\n  \n  return(\n<Collapsible open={props.showSidebar}>\n  <Layer onClickOutside={() => props.setShowSidebar(false)}>\n    <Box>\n        <Button \n        fill\n        icon={<FormClose color='lightgrey'/>}\n        onClick={()=>props.setShowSidebar(false)}\n        />\n\n    </Box>   \n  <Box\n  flex\n  width='medium'\n  background='dark'\n  elevation='small'\n  align='center'\n  justify='start'\n  gap='medium'\n  >\n    <Heading level='2'>{language ? \"Wissenswertes\" : \"Nice to know\"}</Heading>\n    <Card onClick={()=>setShowWissen(!showWissen)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Info color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Historie\" : \"PerVerSo History\"}\n            </Text>\n            <Text size='medium'>{language ? \"Wie alles begann\" : \"How it started\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n\n    <Card onClick={()=>setShowProducts(!showProducts)}>\n      <CardBody>\n      <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Cart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Produkte\" : \"PerVerSo Products\"}\n            </Text>\n            <Text size='medium'>{language ? \"Produktportfolio\" : \"Products\"}</Text>\n          </Box>\n        </Box>\n      </CardBody>\n    </Card>\n\n    <Card onClick={()=>props.setShowStatistics(!props.showStatistics)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <BarChart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"Statistiken\" : \"Statistics\"}\n            </Text>\n            <Text size='medium'>{language ? \"Lass dir die TOP 10 der verkürzten Links anzeigen.\" : \"The TOP 10 shortened urls.\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n    <Products \n      setShowProducts={setShowProducts} \n      showProducts={showProducts}\n      language={language}\n      />\n    <Statistics\n      setShowStatistics={props.setShowStatistics}\n      showStatistics={props.showStatistics}\n      statistics={props.statistics}\n      language={language}\n    />\n    <History\n      setShowWissen={setShowWissen}\n      showWissen={showWissen}\n      language={language}\n    />\n    \n  </Box>\n</Layer>\n</Collapsible>\n)\n}\n\nexport default SidebarMobile;","import React, { useState } from 'react';\nimport { \n  Box,\n  Grommet,\n  ResponsiveContext\n} from 'grommet';\n\nimport Outdated from './sites/outdated'\nimport NotFound from './sites/notFound'\nimport SafeLoad from './sites/safeLoad'\n\nimport MainContent from './components/MainContent'\nimport Sidebar from './components/Sidebar'\nimport AppBar from './components/AppBar'\nimport Help from './components/Help'\nimport AppFooter from './components/AppFooter'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { pvsTheme } from './theme/theme'\nimport SidebarMobile from './components/SidebarMobile';\n\n\n\nconst App = () => {\n  const [showStatistics, setShowStatistics] = useState(false);\n  const [statistics, setStatistics] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  const [darkMode, setDarkmode] = useState(true);\n  const [language, setLanguage] = useState(true);\n\n  return (\n        <Grommet theme={ pvsTheme } themeMode={darkMode ? \"dark\" : \"light\"} full>  \n          <ResponsiveContext.Consumer> \n          {size => (\n            <Box background={darkMode ? \"dark-1\" : \"light-1\"} fill>\n              <AppBar \n                setShowSidebar={setShowSidebar}\n                showSidebar={showSidebar}\n                setShowHelp={setShowHelp}\n                showHelp={showHelp}\n                darkMode={darkMode}\n                setDarkmode={setDarkmode}\n                language={language}\n                setLanguage={setLanguage}\n              />\n\n            \n              <Box flex direction='row' overflow={{ horizontal: 'hidden' }} gap='medium'>\n                \n                {/* <Sidebar \n                    showSidebar={showSidebar}\n                    showStatistics={showStatistics}\n                    setShowStatistics={setShowStatistics}\n                    setStatistics={setStatistics}\n                    statistics={statistics}\n                    language={language}\n                /> */}\n                \n                {(size!=='small' && showSidebar) ? (\n                  \n                  <Sidebar \n                    showSidebar={showSidebar}\n                    showStatistics={showStatistics}\n                    setShowStatistics={setShowStatistics}\n                    setStatistics={setStatistics}\n                    statistics={statistics}\n                    language={language}\n                  />\n                  ):(\n                  <SidebarMobile\n                    showSidebar={showSidebar}\n                    setShowSidebar={setShowSidebar}\n                    showStatistics={showStatistics}\n                    setShowStatistics={setShowStatistics}\n                    setStatistics={setStatistics}\n                    statistics={statistics}\n                    language={language}\n\n                  />\n                  )\n                }\n                \n                <Router>\n                  <Switch>\n                    <Route path=\"/\" exact component={() => <MainContent language={language} darkMode={darkMode} size={size}/>} />\n                    <Route path=\"/error/404\" component={() => <NotFound language={language} />}/>\n                    <Route path=\"/:id/outdated\" component={() => <Outdated language={language} />}/>\n                    <Route path=\"/safeView/:url\" component={() => <SafeLoad language={language}/>}/>\n                  </Switch>\n\n                </Router>\n\n              </Box>\n\n              <Help \n                setShowHelp={setShowHelp}\n                showHelp={showHelp}\n                language={language}\n              />\n\n            </Box>\n          )}             \n        </ResponsiveContext.Consumer> \n      <AppFooter darkMode={darkMode}/>\n    </Grommet>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}