[{"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/index.js":"1","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/reportWebVitals.js":"2","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/App.js":"3","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppBar.js":"4","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Sidebar.js":"5","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContent.js":"6","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Help.js":"7","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppFooter.js":"8","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/theme/theme.js":"9","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/notFound.js":"10","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/safeLoad.js":"11","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/outdated.js":"12"},{"size":478,"mtime":1615546167682,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1615545824266,"results":"15","hashOfConfig":"14"},{"size":2542,"mtime":1617364775393,"results":"16","hashOfConfig":"14"},{"size":1105,"mtime":1617347287844,"results":"17","hashOfConfig":"14"},{"size":9485,"mtime":1617368953877,"results":"18","hashOfConfig":"14"},{"size":9733,"mtime":1617356342208,"results":"19","hashOfConfig":"14"},{"size":4612,"mtime":1617357312060,"results":"20","hashOfConfig":"14"},{"size":491,"mtime":1617276295256,"results":"21","hashOfConfig":"14"},{"size":1537,"mtime":1617274714353,"results":"22","hashOfConfig":"14"},{"size":854,"mtime":1617353614977,"results":"23","hashOfConfig":"14"},{"size":1634,"mtime":1617353608033,"results":"24","hashOfConfig":"14"},{"size":1336,"mtime":1617364814125,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nkrjdm",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/index.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/reportWebVitals.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/App.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppBar.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Sidebar.js",["54"],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContent.js",["55","56"],"import React, { useEffect, useState } from 'react';\nimport { \n  Anchor,\n  Box, \n  Button,\n  CheckBox, \n  Collapsible,\n  Heading, \n  Select,\n  Text,\n  TextInput,\n  Form\n} from 'grommet';\nimport { \n  Code, \n  Configure,\n  Edit,\n  Secure,\n  Tag \n} from 'grommet-icons';\n\n\nconst MainContent = (props) => {\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCustomURL, setShowCustomURL] = useState(false);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [showMaxReferences, setShowMaxReferences] = useState(false);\n  const [showRandomizer, setShowRandomizer] = useState(false);\n  const [CustomURL, setCustomURL] = useState('');\n  const [MaxReferences, setMaxReferences] = useState(-1);\n  const [Randomizer, setRandomizer] = useState(1);\n  const [randomOptions, setRandomOptions] = useState([]);\n\n  const [URLInput, setURLInput] = useState('');\n  const [myURL, setURL] = useState('');\n\n\n  const [showResult, setShowResult] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const language = props.language\n  const [createdUrl, setCreatedUrl] = useState(`${props.domain}`);\n  const [answer, setAnswer] = useState(<Text size='medium' color='brand'>Your URL was created</Text>);\n\n\n\n  useEffect(() => {\n    document.title = \"pvsURL\";\n    if(props.language){\n      setAnswer(<Text size='medium' color='brand'>Deine kurze URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> wurde erstellt</Text>) \n      setRandomOptions([\n        { label: 'Standard', value: 1 },\n        { label: 'Großbuchstaben', value: 2 },\n        { label: 'Kleinbuchstaben', value: 3 },\n        { label: 'Zahlen', value: 4 },\n      ])\n    }else {\n      setAnswer(<Text size='medium' color='brand'>Your URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> was created</Text>)\n      setRandomOptions([\n        { label: 'Default', value: 1 },\n        { label: 'Uppercase', value: 2 },\n        { label: 'Lowercase', value: 3 },\n        { label: 'Numbers', value: 4 },\n      ])\n    }\n\n  },[language])\n\n  useEffect(() => {\n    createShortUrl();\n  }, [myURL]);\n\n  const createShortUrl = async () => {\n    var base = `/api/create?url=${myURL}`;\n    if(showCustomURL){\n      base= base + `&custom=${CustomURL}`;\n    }\n    if(isPrivate){\n      base= base + \"&private=1\";\n    }\n    if(showMaxReferences){\n      base=base + `&refs_available=${MaxReferences}`;\n    }\n    if(showRandomizer){\n      base=base + `&random_method=${Randomizer.value}`;\n    }else{\n      base=base + `&random_method=1`;\n    }\n    if(myURL.length>4){\n    try{\n      const response = await fetch(base, {method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        });\n      const dataUrl = await response.json();\n      setMessage(dataUrl.message);\n      if(dataUrl.hasOwnProperty('url')){\n        setCreatedUrl(dataUrl.url);\n        if(language){\n          setAnswer(<Text size='medium' color='brand'>Deine kurze URL <Anchor href={dataUrl.url} label={dataUrl.url} color='brand'/> wurde erstellt</Text>) \n        }else {\n          setAnswer(<Text size='medium' color='brand'>Your URL <Anchor href={dataUrl.url} label={dataUrl.url} color='brand'/> was created</Text>)\n        }\n      }\n    } catch(error){\n      setMessage(\"Error connecting to Backend\")\n      setAnswer(message)\n    }\n    \n    }\n    console.log(Randomizer);\n  };\n\n  \n\n  const updateURL = e => {\n    setURLInput(e.target.value);\n  };\n  const updateMaxRef = e => {\n    setMaxReferences(e.target.value);\n  };\n  const updateCustomURL = e => {\n    setCustomURL(e.target.value);\n  };\n  \n  const getURL = e => {\n    e.preventDefault();\n    setURL(URLInput);\n    setShowResult(true);\n  };\n\n  return(\n  <Box\n  flex\n  align='center'\n  justify='center'\n  gap='medium'\n  >\n    \n    <Heading level='1'>PerVerSo Shorter URLs</Heading>\n    <Box direction='row' gap='small'>\n\n    <Button \n      icon={<Configure color='dark-1'/>}\n      color='brand'\n      size='small'\n      onClick={() => {setShowSettings(!showSettings);\n      setShowCustomURL(false);\n      setIsPrivate(false);\n      setShowMaxReferences(false);\n      setShowRandomizer(false);\n      }}\n    />\n    \n    <Box\n      width=\"large\"\n      direction=\"row\"\n      align=\"center\"\n      pad={{ horizontal: 'small', vertical: 'xsmall' }}\n      round=\"small\"\n      border={{\n        side: 'all',\n        color: 'brand',\n      }}\n    >\n      <Code color='brand'/>\n      <TextInput \n      plain\n      placeholder={language ? 'Füge deinen Link ein...' : 'Enter your URL...'}\n      onChange={updateURL}\n      /> \n    </Box>\n\n      <Form onSubmit={getURL}>\n        <Button\n          color='brand'\n          label={language ? 'Verkürzen':'Shorten'}\n          type='submit'\n          fill='true'\n        />\n      </Form>\n      \n    </Box>\n\n    <Collapsible direction='vertical' open={showResult}>\n      <Box\n      width='large'\n      >\n        \n        {(() => {\n          if (createdUrl.length>0) {\n            return (\n              answer\n            )\n          } else {\n            return (\n              <Text size='medium' color='test'>{message}</Text>\n            )\n          } \n          })()}\n        \n      </Box>\n    </Collapsible>\n\n    <Collapsible direction='vertical' open={showSettings}>\n      <Box\n      flex\n      direction='column'\n      align='center'\n      justify='center'\n      gap='medium'\n      >\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"center\"\n          gap='medium'\n        >\n          <CheckBox\n            toggle\n            label={language ? 'Individueller Tag' : 'Custom tag'}\n            onClick={() => setShowCustomURL(!showCustomURL)}\n          />\n          <Collapsible direction='horizontal' open={showCustomURL}>\n            <Box width='large' direction='row' justify='end'>\n              <Box\n                width=\"medium\"\n                direction=\"row\"\n                align=\"center\"\n                justify='end'\n                pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                round=\"small\"\n                border={{\n                  side: 'all',\n                  color: 'brand',\n                }}\n              >\n                <Tag color='brand'/>\n                <TextInput \n                plain\n                placeholder={language ? 'Gib deinen individuellen Tag ein...' : 'Enter custom tag...'}\n                onChange={updateCustomURL}\n                /> \n              </Box>\n            </Box>\n          </Collapsible>\n        </Box>\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"center\"\n          gap='medium'\n        >\n          <CheckBox\n            toggle\n            label={language ? 'Limit an Aufrufen setzen':'Set max. references'}\n            onClick={() => setShowMaxReferences(!showMaxReferences)}\n          />\n          <Collapsible direction='horizontal' open={showMaxReferences}>\n            <Box width='large' direction='row' justify='end'>\n              <Box\n                width=\"medium\"\n                direction=\"row\"\n                align=\"center\"\n                justify='end'\n                pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                round=\"small\"\n                border={{\n                  side: 'all',\n                  color: 'brand',\n                }}\n              >\n                <Edit color='brand'/>\n                <TextInput \n                plain\n                placeholder={language ? 'Gib die Anzahl der maximalen Aufrufe ein...' : 'Enter max. References...'}\n                onChange={updateMaxRef}\n                /> \n              </Box>\n            </Box>\n          </Collapsible>\n        </Box>\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"start\"\n          gap='small'\n        >\n          <CheckBox\n            toggle\n            label={language ? 'Privat setzen' : 'Is private'}\n            onClick={() => setIsPrivate(!isPrivate)}\n          />\n          <Collapsible direction='horizontal' open={isPrivate}>\n            <Secure color='brand'/>\n          </Collapsible>\n        </Box>\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"center\"\n          gap='medium'\n        >\n          <CheckBox\n            toggle\n            label={language ? 'Speziellen Zufallsgenerator' : 'Special randomizer'}\n            onClick={() => setShowRandomizer(!showRandomizer)}\n          />\n          <Collapsible direction='horizontal' open={showRandomizer}>\n            <Box width='large' direction='row' justify='end'>\n              <Box\n                width=\"medium\"\n                direction=\"row\"\n                align=\"center\"\n                justify='start'\n                pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                round=\"small\"\n                border={{\n                  side: 'all',\n                  color: 'brand',\n                }}\n              >\n                <Tag color='brand'/>\n                <Select \n                placeholder={language ? 'Auswählen Zufallsgenerator...' : 'Select randomizer...'}\n                options={randomOptions}\n                labelKey=\"label\"\n                valueKey=\"value\"\n                onChange={({ option }) => setRandomizer(option)}\n                dropHeight='small'\n                plain\n                />\n              </Box>\n            </Box>\n          </Collapsible>\n        </Box>\n      \n      </Box>\n    </Collapsible>\n\n  </Box>\n  );\n}\n\nexport default MainContent;","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Help.js",["57","58"],"import { \n    \n    Box,\n    Button,\n    Collapsible,\n    Heading,\n    Layer,\n    Text,\n    TextArea\n\n } from 'grommet';\n import { FormClose } from 'grommet-icons';\nimport React, { useEffect, useState } from 'react';\n\nconst Help = props => {\n    const language = props.language\n    const [text, setText] = useState(\"\")\n\n    useEffect(() => {\n        if(language){\n            setText(<Text>Geben Sie die gewünschte <b>URL</b> in das Eingabefeld ein und drücken Sie anschließend auf <b>shorten</b>. Es wird eine zufällige kurze URL mit der Domain perver.so erzeugt.\n            Möchten Sie einen eigenen Namen wählen oder die Konditionen verändern, drücken Sie bitte auf das <b>Werkzeug-Symbol</b> links vom Eingabefeld. Es öffnen sich nun weitere Optionen:<br />\n            <br /><b>Custom Tag:</b> Wenn Sie den Schalter nach rechts schieben (anklicken), können Sie im neuen Eingabefeld einen eigenen URL Tag angeben. (https://perver.so/[ihr persönlicher tag])\n            <br/><br/><b>Max References:</b> Wenn diese Option gewählt ist, können Sie die Nutzungszahl für den erstellenden Link angeben. Nachdem das Limit erreicht wurde, wird Ihre URL überschrieben, das Tag bleibt jedoch bestehen.\n            <br/><br/><b>Private:</b> Wenn diese Option gewählt ist, wird die gekürzte URL nicht in der Statistik erfasst. Wenn neben der Option ein Schloss erscheint, ist der Link privat.\n            <br/><br/><b>Special Randomizer:</b> Wenn diese Option gewählt ist, können Optionen für die zufällige Tag Vergabe gewählt werden:\n            <br/>- Default (Großbuchstaben, Kleinbuchstaben, Zahlen) [1]\n            <br/>- nur Großbuchstaben [2]\n            <br/>- nur Kleinbuchstaben [3]\n            <br/>- nur Zahlen [4]\n            <br/><br/><b>API:</b> Wollen Sie die API nutzen, so können Sie einen GET Request an https://perver.so/api/create stellen.\n            <br/><b>Parameter:</b>\n            <br/>-url [required] string\n            <br/>-custom [optional] string \n            <br/>-private [optional] 0 oder 1\n            <br/>-refs_available [optional] int (default= -1)\n            <br/>-random_method [optional] int (default= 1)\n            <br/><br/><b>Beispiel Anfrage:</b>\n            <br/>GET https://perver.so/api/create?url=https://perver.so&custom=foo</Text>)\n        }else{\n            setText(<Text>Please enter your <b>URL</b> into the input field. In effect press the <b>shorten</b> button. Your random short URL with the Domain perver.so gets created.\n            If you want to use your own custom tag or change the conditions please press the <b>wrench symbol</b> on the left side of the input field. Now there are multiple options available:<br />\n            <br /><b>Custom Tag:</b> If you choose the option you can enter your custom tag. (https://perver.so/[ihr persönlicher tag])\n            <br/><br/><b>Max References:</b> If you chosse the option, you can enter a number. If the short url was opened as often as your number, the url gets updated and you can't access the original url.\n            <br/><br/><b>Private:</b>If you choose the option, the url will not be recorded in the statistics. If there is a lock next to the option then the link is private.\n            <br/><br/><b>Special Randomizer:</b> If you choose the option, then you can choose which randomizer should be used when creating a short url.\n            <br/>- default (uppercase, lowercase, numbers) [1]\n            <br/>- just uppercase [2]\n            <br/>- just lowercase [3]\n            <br/>- just numbers [4]\n            <br/><br/><b>API:</b> If you want to use the API, you can make a GET Request to https://perver.so/api/create\n            <br/><b>Options:</b>\n            <br/>-url [required] string\n            <br/>-custom [optional] string \n            <br/>-private [optional] 0 oder 1\n            <br/>-refs_available [optional] int (default= -1)\n            <br/>-random_method [optional] int (default= 1)\n            <br/><br/><b>Sample Request:</b>\n            <br/>GET https://perver.so/api/create?url=https://perver.so&custom=foo</Text>)\n        }\n    }, [])\n    \n    return(\n    <Collapsible direction='horizontal' open={props.showHelp}>\n        <Layer>\n        <Box>\n            <Button\n            icon={<FormClose color='lightgrey'/>}\n            onClick={()=>props.setShowHelp(false)}\n            />\n        </Box>\n        <Box margin='medium' overflow={{\"vertical\": \"scroll\"}} >\n            <Heading level='2'>{language ? \"Anleitung\" : \"Manual\"}</Heading>\n            {text}\n        </Box>\n        </Layer>\n    </Collapsible>\n    )\n}\n\nexport default Help;","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppFooter.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/theme/theme.js",["59"],"export const pvsTheme = {\n    \"global\": {\n      \"drop\":{\n        \"background\": \"#444444\",\n        \"shadowSize\": \"medium\"\n      },\n      \"elevation\": {\n        \"dark\": {\n          \"medium\": \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\n        },\n        \"light\": {\n          \"medium\": \"0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)\"\n        }\n      },\n      \"colors\": {\n        \"brand\": \"#6496FA\",\n        \"test\": \"red\",\n        \"text\": {\n          \"dark\": \"light-1\",\n          \"light\": \"dark-1\"\n        }\n      },\n      \"font\": {\n        \"family\": \"Arial\",\n        \"size\": \"20px\",\n        \"height\": \"20px\"\n      },\n      \"input\": {\n        \"weight\": 400\n      }\n    },\n    \"checkBox\":{\n      \"hover\":{\n        \"border\":{\n          \"color\":\"brand\"\n        }\n      },\n      \"color\":{\n        \"dark\": \"brand\"\n      },\n      \"border\":{\n        \"color\": \"brand\"\n      },\n      \"toggle\":{\n        \"color\":{\n          \"light\": \"brand\"\n        }\n      }\n    },\n    \"card\": {\n      \"container\": {\n        \"background\": {\"dark\":\"dark-2\",\n                    \"light\": \"light-3\"},\n        \"elevation\": \"none\"\n      },\n      \"footer\": {\n        \"background\": {\"dark\": \"dark-3\",\n        \"light\": \"light-3\"}\n      }\n    },\n    \"button\": {\n      \"border\":{\n        \"radius\": \"12px\"\n      },\n      \"default\": {\n        \"background\":{\n          \"color\": {\n            \"dark\": \"brand\",\n            \"light\": \"brand\"\n        },\n        \"color\": {\n          \"dark\":\"light-1\", \n          \"light\": \"dark-1\"\n        }\n      }\n    }\n  }\n}","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/notFound.js",["60"],"import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Image\n} from 'grommet';\n\n\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst NotFound = (props) => {\n  const language = props.language\n\n  useEffect(() => {\n    document.title = \"pvsURL - 404\";\n  }, []);\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Image src=\"/images/404\"/>\n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='medium' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          {language ? \"Nochmal versuchen\" : \"Try Again\"}\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  )\n}\n\n\nexport default NotFound;\n","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/safeLoad.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/outdated.js",[],{"ruleId":"61","severity":1,"message":"62","line":28,"column":6,"nodeType":"63","endLine":28,"endColumn":28,"suggestions":"64"},{"ruleId":"61","severity":1,"message":"65","line":68,"column":5,"nodeType":"63","endLine":68,"endColumn":15,"suggestions":"66"},{"ruleId":"61","severity":1,"message":"67","line":72,"column":6,"nodeType":"63","endLine":72,"endColumn":13,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":9,"column":5,"nodeType":"71","messageId":"72","endLine":9,"endColumn":13},{"ruleId":"61","severity":1,"message":"73","line":61,"column":8,"nodeType":"63","endLine":61,"endColumn":10,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":71,"column":9,"nodeType":"77","messageId":"78","endLine":71,"endColumn":16},{"ruleId":"69","severity":1,"message":"79","line":1,"column":28,"nodeType":"71","messageId":"72","endLine":1,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStatistics'. Either include it or remove the dependency array.","ArrayExpression",["80"],"React Hook useEffect has missing dependencies: 'createdUrl' and 'props.language'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAnswer' needs the current value of 'createdUrl'.",["81"],"React Hook useEffect has a missing dependency: 'createShortUrl'. Either include it or remove the dependency array.",["82"],"no-unused-vars","'TextArea' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'language'. Either include it or remove the dependency array.",["83"],"no-dupe-keys","Duplicate key 'color'.","ObjectExpression","unexpected","'useState' is defined but never used.",{"desc":"84","fix":"85"},{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},"Update the dependencies array to be: [getStatistics, props.showStatistics]",{"range":"92","text":"93"},"Update the dependencies array to be: [createdUrl, language, props.language]",{"range":"94","text":"95"},"Update the dependencies array to be: [createShortUrl, myURL]",{"range":"96","text":"97"},"Update the dependencies array to be: [language]",{"range":"98","text":"99"},[462,484],"[getStatistics, props.showStatistics]",[2021,2031],"[createdUrl, language, props.language]",[2081,2088],"[createShortUrl, myURL]",[4080,4082],"[language]"]