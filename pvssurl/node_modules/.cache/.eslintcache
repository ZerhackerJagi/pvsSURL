[{"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/index.js":"1","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/reportWebVitals.js":"2","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/App.js":"3","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppBar.js":"4","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Sidebar.js":"5","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContent.js":"6","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Help.js":"7","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppFooter.js":"8","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/theme/theme.js":"9","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/notFound.js":"10","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/safeLoad.js":"11","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/outdated.js":"12","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/SidebarMobile.js":"13","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Products.js":"14","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Statistics.js":"15","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/History.js":"16","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContentDesktop.js":"17","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContentMobile.js":"18"},{"size":478,"mtime":1615546167682,"results":"19","hashOfConfig":"20"},{"size":362,"mtime":1615545824266,"results":"21","hashOfConfig":"20"},{"size":3803,"mtime":1617872837497,"results":"22","hashOfConfig":"20"},{"size":1113,"mtime":1617441488151,"results":"23","hashOfConfig":"20"},{"size":3382,"mtime":1617376680119,"results":"24","hashOfConfig":"20"},{"size":5873,"mtime":1617700982321,"results":"25","hashOfConfig":"20"},{"size":4628,"mtime":1617701145735,"results":"26","hashOfConfig":"20"},{"size":831,"mtime":1617701081038,"results":"27","hashOfConfig":"20"},{"size":1619,"mtime":1617701308666,"results":"28","hashOfConfig":"20"},{"size":844,"mtime":1617701257273,"results":"29","hashOfConfig":"20"},{"size":1675,"mtime":1617873581651,"results":"30","hashOfConfig":"20"},{"size":1336,"mtime":1617364814125,"results":"31","hashOfConfig":"20"},{"size":3632,"mtime":1617701229485,"results":"32","hashOfConfig":"20"},{"size":4127,"mtime":1617701205116,"results":"33","hashOfConfig":"20"},{"size":1966,"mtime":1617701242997,"results":"34","hashOfConfig":"20"},{"size":1531,"mtime":1617701166020,"results":"35","hashOfConfig":"20"},{"size":7655,"mtime":1617700731668,"results":"36","hashOfConfig":"20"},{"size":7694,"mtime":1617700539316,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"nkrjdm",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/index.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/reportWebVitals.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/App.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppBar.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Sidebar.js",["77"],"import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Card,\n  CardBody,\n  Collapsible,\n  Heading, \n  Text\n} from 'grommet';\nimport { \n  BarChart,\n  Cart,\n  Info\n} from 'grommet-icons';\nimport Products from './Products';\nimport History from './History';\nimport Statistics from './Statistics'\n\n\n\nconst Sidebar = (props) => {\n  const [showWissen, setShowWissen] = useState(false);\n  const [showProducts, setShowProducts] = useState(false);\n  const language = props.language\n\n  useEffect(() => {\n    getStatistics();\n  }, [props.showStatistics])\n\n  const getStatistics = async ()=> {\n    const response = await fetch(`/api/statistics`)\n    const dataStat = await response.json();\n    props.setStatistics(dataStat);\n  }\n  \n  return(\n  <Collapsible direction='horizontal' open={props.showSidebar}>\n  <Box\n  flex\n  width='medium'\n  background='dark'\n  elevation='small'\n  align='center'\n  justify='start'\n  gap='medium'\n  >\n    <Heading level='2'>{language ? \"Wissenswertes\" : \"Nice to know\"}</Heading>\n    <Card onClick={()=>setShowWissen(!showWissen)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Info color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Historie\" : \"PerVerSo History\"}\n            </Text>\n            <Text size='medium'>{language ? \"Wie alles begann\" : \"How it started\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n\n    <Card onClick={()=>setShowProducts(!showProducts)}>\n      <CardBody>\n      <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Cart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Produkte\" : \"PerVerSo Products\"}\n            </Text>\n            <Text size='medium'>{language ? \"Produktportfolio\" : \"Products\"}</Text>\n          </Box>\n        </Box>\n      </CardBody>\n    </Card>\n\n    <Card onClick={()=>props.setShowStatistics(!props.showStatistics)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <BarChart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"Statistiken\" : \"Statistics\"}\n            </Text>\n            <Text size='medium'>{language ? \"Lass dir die TOP 10 der verk√ºrzten Links anzeigen.\" : \"The TOP 10 shortened urls.\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n    <Products \n      setShowProducts={setShowProducts} \n      showProducts={showProducts}\n      language={language}\n      />\n    <Statistics\n      setShowStatistics={props.setShowStatistics}\n      showStatistics={props.showStatistics}\n      statistics={props.statistics}\n      language={language}\n    />\n    <History\n      setShowWissen={setShowWissen}\n      showWissen={showWissen}\n      language={language}\n    />\n    \n  </Box>\n</Collapsible>\n  \n)\n}\n\nexport default Sidebar;","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContent.js",["78","79","80"],"import React, { useEffect, useState } from 'react';\nimport { \n  Anchor,\n  Box, \n  Heading, \n  Text\n} from 'grommet';\nimport MainContentDesktop from './MainContentDesktop'\nimport MainContentMobile from './MainContentMobile'\n\n\nconst MainContent = (props) => {\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCustomURL, setShowCustomURL] = useState(false);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [showMaxReferences, setShowMaxReferences] = useState(false);\n  const [showRandomizer, setShowRandomizer] = useState(false);\n  const [CustomURL, setCustomURL] = useState('');\n  const [MaxReferences, setMaxReferences] = useState(-1);\n  const [Randomizer, setRandomizer] = useState(1);\n  const [randomOptions, setRandomOptions] = useState([]);\n\n  const [URLInput, setURLInput] = useState('');\n  const [myURL, setURL] = useState('');\n\n\n  const [showResult, setShowResult] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const language = props.language\n  const [createdUrl, setCreatedUrl] = useState(`${props.domain}`);\n  const [answer, setAnswer] = useState(<Text size='medium' color='brand'>Your URL was created</Text>);\n\n\n\n  useEffect(() => {\n    document.title = \"pvsURL\";\n    if(props.language){\n      setAnswer(<Text size='medium' color='brand'>Deine kurze URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> wurde erstellt</Text>) \n      setRandomOptions([\n        { label: 'Standard', value: 1 },\n        { label: 'Gro√übuchstaben', value: 2 },\n        { label: 'Kleinbuchstaben', value: 3 },\n        { label: 'Zahlen', value: 4 },\n      ])\n    }else {\n      setAnswer(<Text size='medium' color='brand'>Your URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> was created</Text>)\n      setRandomOptions([\n        { label: 'Default', value: 1 },\n        { label: 'Uppercase', value: 2 },\n        { label: 'Lowercase', value: 3 },\n        { label: 'Numbers', value: 4 },\n      ])\n    }\n\n  },[language])\n\n  useEffect(() => {\n    createShortUrl();\n  }, [myURL]);\n\n  const createShortUrl = async () => {\n    var base = `/api/create?url=${myURL}`;\n    if(showCustomURL){\n      base= base + `&custom=${CustomURL}`;\n    }\n    if(isPrivate){\n      base= base + \"&private=1\";\n    }\n    if(showMaxReferences){\n      base=base + `&refs_available=${MaxReferences}`;\n    }\n    if(showRandomizer){\n      base=base + `&random_method=${Randomizer.value}`;\n    }else{\n      base=base + `&random_method=1`;\n    }\n    if(myURL.length>4){\n    try{\n      const response = await fetch(base, {method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        });\n      const dataUrl = await response.json();\n      setMessage(dataUrl.message);\n      if(dataUrl.hasOwnProperty('url')){\n        setCreatedUrl(dataUrl.url);\n        if(language){\n          setAnswer(<Text size='medium' color='brand'>Deine kurze URL <Anchor href={dataUrl.url} label={dataUrl.url} color='brand'/> wurde erstellt</Text>) \n        }else {\n          setAnswer(<Text size='medium' color='brand'>Your URL <Anchor href={dataUrl.url} label={dataUrl.url} color='brand'/> was created</Text>)\n        }\n      }\n    } catch(error){\n      setMessage(\"Error connecting to Backend\")\n      setAnswer(message)\n    }\n    \n    }\n    console.log(Randomizer);\n  };\n\n  \n\n  const updateURL = e => {\n    setURLInput(e.target.value);\n  };\n  const updateMaxRef = e => {\n    setMaxReferences(e.target.value);\n  };\n  const updateCustomURL = e => {\n    setCustomURL(e.target.value);\n  };\n  \n  const getURL = e => {\n    e.preventDefault();\n    setURL(URLInput);\n    setShowResult(true);\n  };\n\n  const size=props.size;\n\n  return(\n  <Box\n  flex\n  align='center'\n  justify='center'\n  gap='medium'\n  background={props.darkMode ? \"dark\" : \"light\"}\n  >\n    \n    <Heading level='1'>PerVerSo Shorter URLs</Heading>\n    <Box direction='row' gap='small'>\n\n     {props.size!==\"small\" ? (\n    <MainContentDesktop\n      message={message}\n      createdUrl={createdUrl}\n      darkMode={props.darkMode}\n      setRandomizer={setRandomizer}\n      randomOptions={randomOptions}\n      language={language}\n      showRandomizer={showRandomizer}\n      setShowRandomizer={setShowRandomizer}\n      isPrivate={isPrivate}\n      setIsPrivate={setIsPrivate}\n      updateMaxRef={updateMaxRef}\n      showMaxReferences={showMaxReferences}\n      setShowMaxReferences={setShowMaxReferences}\n      updateCustomURL={updateCustomURL}\n      showCustomURL={showCustomURL}\n      setShowCustomURL={setShowCustomURL}\n      showSettings={showSettings}\n      showResult={showResult}\n      getURL={getURL}\n      updateURL={updateURL}\n      setShowSettings={setShowSettings}\n      answer={answer}\n\n      \n    /> ):( \n      <MainContentMobile\n        message={message}\n        createdUrl={createdUrl}\n        darkMode={props.darkMode}\n        setRandomizer={setRandomizer}\n        randomOptions={randomOptions}\n        language={language}\n        showRandomizer={showRandomizer}\n        setShowRandomizer={setShowRandomizer}\n        isPrivate={isPrivate}\n        setIsPrivate={setIsPrivate}\n        updateMaxRef={updateMaxRef}\n        showMaxReferences={showMaxReferences}\n        setShowMaxReferences={setShowMaxReferences}\n        updateCustomURL={updateCustomURL}\n        showCustomURL={showCustomURL}\n        setShowCustomURL={setShowCustomURL}\n        showSettings={showSettings}\n        showResult={showResult}\n        getURL={getURL}\n        updateURL={updateURL}\n        setShowSettings={setShowSettings}\n        answer={answer}\n      />\n    )}\n\n    </Box>\n\n  </Box>\n  );\n}\n\nexport default MainContent;","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Help.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/AppFooter.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/theme/theme.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/notFound.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/safeLoad.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/sites/outdated.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/SidebarMobile.js",["81"],"import React, { useState, useEffect } from 'react';\nimport { \n    Button,\n  Box, \n  Card,\n  CardBody,\n  Layer,\n  Heading, \n  Text,\n  Collapsible\n} from 'grommet';\nimport { \n  BarChart,\n  FormClose,\n  Cart,\n  Info\n} from 'grommet-icons';\nimport Products from './Products';\nimport History from './History';\nimport Statistics from './Statistics'\n\n\n\nconst SidebarMobile = (props) => {\n  const [showWissen, setShowWissen] = useState(false);\n  const [showProducts, setShowProducts] = useState(false);\n  const language = props.language\n\n  useEffect(() => {\n    getStatistics();\n  }, [props.showStatistics])\n\n  const getStatistics = async ()=> {\n    const response = await fetch(`/api/statistics`)\n    const dataStat = await response.json();\n    props.setStatistics(dataStat);\n  }\n  \n  return(\n<Collapsible open={props.showSidebar}>\n  <Layer onClickOutside={() => props.setShowSidebar(false)}>\n    <Box>\n        <Button \n        fill\n        icon={<FormClose color='lightgrey'/>}\n        onClick={()=>props.setShowSidebar(false)}\n        />\n\n    </Box>   \n  <Box\n  flex\n  width='medium'\n  background='dark'\n  elevation='small'\n  align='center'\n  justify='start'\n  gap='medium'\n  >\n    <Heading level='2'>{language ? \"Wissenswertes\" : \"Nice to know\"}</Heading>\n    <Card onClick={()=>setShowWissen(!showWissen)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Info color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Historie\" : \"PerVerSo History\"}\n            </Text>\n            <Text size='medium'>{language ? \"Wie alles begann\" : \"How it started\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n\n    <Card onClick={()=>setShowProducts(!showProducts)}>\n      <CardBody>\n      <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Cart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"PerVerSo Produkte\" : \"PerVerSo Products\"}\n            </Text>\n            <Text size='medium'>{language ? \"Produktportfolio\" : \"Products\"}</Text>\n          </Box>\n        </Box>\n      </CardBody>\n    </Card>\n\n    <Card onClick={()=>props.setShowStatistics(!props.showStatistics)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <BarChart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              {language ? \"Statistiken\" : \"Statistics\"}\n            </Text>\n            <Text size='medium'>{language ? \"Lass dir die TOP 10 der verk√ºrzten Links anzeigen.\" : \"The TOP 10 shortened urls.\"}</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n    <Products \n      setShowProducts={setShowProducts} \n      showProducts={showProducts}\n      language={language}\n      />\n    <Statistics\n      setShowStatistics={props.setShowStatistics}\n      showStatistics={props.showStatistics}\n      statistics={props.statistics}\n      language={language}\n    />\n    <History\n      setShowWissen={setShowWissen}\n      showWissen={showWissen}\n      language={language}\n    />\n    \n  </Box>\n</Layer>\n</Collapsible>\n)\n}\n\nexport default SidebarMobile;","/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Products.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/Statistics.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/History.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContentDesktop.js",[],"/home/jakob/Dokumente/2_uni/sem6/ebusiness/pvsSURL/pvsSURL/pvssurl/src/components/MainContentMobile.js",[],{"ruleId":"82","severity":1,"message":"83","line":28,"column":6,"nodeType":"84","endLine":28,"endColumn":28,"suggestions":"85"},{"ruleId":"82","severity":1,"message":"86","line":57,"column":5,"nodeType":"84","endLine":57,"endColumn":15,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"88","line":61,"column":6,"nodeType":"84","endLine":61,"endColumn":13,"suggestions":"89"},{"ruleId":"90","severity":1,"message":"91","line":125,"column":9,"nodeType":"92","messageId":"93","endLine":125,"endColumn":13},{"ruleId":"82","severity":1,"message":"83","line":31,"column":6,"nodeType":"84","endLine":31,"endColumn":28,"suggestions":"94"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getStatistics'. Either include it or remove the dependency array.","ArrayExpression",["95"],"React Hook useEffect has missing dependencies: 'createdUrl' and 'props.language'. Either include them or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setAnswer' needs the current value of 'createdUrl'.",["96"],"React Hook useEffect has a missing dependency: 'createShortUrl'. Either include it or remove the dependency array.",["97"],"no-unused-vars","'size' is assigned a value but never used.","Identifier","unusedVar",["98"],{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},{"desc":"99","fix":"105"},"Update the dependencies array to be: [getStatistics, props.showStatistics]",{"range":"106","text":"107"},"Update the dependencies array to be: [createdUrl, language, props.language]",{"range":"108","text":"109"},"Update the dependencies array to be: [createShortUrl, myURL]",{"range":"110","text":"111"},{"range":"112","text":"107"},[536,558],"[getStatistics, props.showStatistics]",[1977,1987],"[createdUrl, language, props.language]",[2037,2044],"[createShortUrl, myURL]",[576,598]]