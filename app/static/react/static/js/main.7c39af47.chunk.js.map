{"version":3,"sources":["sites/outdated.js","sites/notFound.js","sites/safeLoad.js","components/MainContent.js","components/Sidebar.js","components/AppBar.js","components/Help.js","components/AppFooter.js","theme/theme.js","App.js","reportWebVitals.js","index.js"],"names":["Outdated","useState","pointer","setPointer","useEffect","document","title","window","location","pathname","substr","length","Box","flex","align","justify","gap","Heading","Text","to","border","width","side","color","round","background","NotFound","Image","src","SafeLoad","onClick","replace","MainContent","props","showSettings","setShowSettings","showCustomURL","setShowCustomURL","isPrivate","setIsPrivate","showMaxReferences","setShowMaxReferences","showRandomizer","setShowRandomizer","CustomURL","setCustomURL","MaxReferences","setMaxReferences","Randomizer","setRandomizer","URLInput","setURLInput","myURL","setURL","showResult","setShowResult","message","setMessage","domain","createdUrl","setCreatedUrl","createShortUrl","a","base","value","fetch","method","mode","cache","credentials","redirect","referrerPolicy","response","json","dataUrl","hasOwnProperty","url","console","log","level","direction","Button","icon","Configure","size","pad","horizontal","vertical","Code","TextInput","plain","placeholder","onChange","e","target","Form","onSubmit","preventDefault","label","type","fill","Collapsible","open","Anchor","href","CheckBox","toggle","Tag","Edit","Secure","Select","options","labelKey","valueKey","option","dropHeight","Sidebar","showWissen","setShowWissen","showProducts","setShowProducts","getStatistics","showStatistics","dataStat","setStatistics","showSidebar","elevation","Card","CardBody","Info","weight","Cart","setShowStatistics","BarChart","Layer","FormClose","margin","overflow","statistics","map","entry","reference","short","frequency","AppBar","tag","left","right","style","zIndex","Menu","setShowSidebar","setShowHelp","showHelp","setDarkmode","darkMode","Help","AppFooter","Footer","textAlign","pvsTheme","global","drop","shadowSize","dark","medium","light","colors","brand","test","text","font","family","height","input","checkBox","hover","card","container","footer","button","radius","default","App","Grommet","theme","themeMode","full","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7c39af47.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Heading,\n  Text\n} from 'grommet';\n\n\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst Outdated = () => {\n\n  const [pointer, setPointer] = useState(\"\")\n\n  useEffect(() => {\n    document.title = \"pvsURL - Link outdated\";\n    setPointer(window.location.pathname.substr(1,(window.location.pathname.length-10)))\n  }, []);\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Heading>Short URL Outdated</Heading>\n      <Text>The requested Tag ({pointer}) was only generated for a limited number of requests. Please try another one.</Text>\n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='medium' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          Try Again\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  );\n}\n\n\nexport default Outdated;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Image\n} from 'grommet';\n\n\nimport { Link } from 'react-router-dom'\n\n\n\n\nconst NotFound = () => {\n  const [showStatistics, setShowStatistics] = useState(false);\n  const [statistics, setStatistics] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n\n  useEffect(() => {\n    document.title = \"pvsURL - 404\";\n  }, []);\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Image src=\"/images/404\"/>\n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='medium' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          Try Again\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  )\n}\n\n\nexport default NotFound;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Box, \n  Text,\n  Heading\n} from 'grommet';\nimport { Link } from 'react-router-dom'\n\nconst SafeLoad = () => {\n\n  const [pointer, setPointer] = useState('')\n\n  useEffect(() => {\n    document.title = \"pvsURL - Safe Opener\";\n\n    const pathname = window.location.pathname\n    setPointer(`https://${pathname.substr(1,pathname.length-9)}`)\n  }, []);\n\n\n\n  return (\n    \n    <Box\n    flex\n    align='center'\n    justify='center'\n    gap='medium'>\n      <Heading>Are you sure?</Heading>\n      <Text>The short url points to {pointer}. Do you want to continue?</Text>\n      \n      <Box\n        border=\"small\"\n        onClick={()=> window.location.replace(pointer)}\n        >\n          <Box \n          width='small' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          Yes\n          </Box>\n        </Box>\n\n      \n      <Link to=\"/\">\n        <Box\n        border=\"small\"\n        >\n          <Box \n          width='small' \n          border={{\n            side: 'all',\n            color: 'brand',\n          }}\n          round=\"small\"\n          align='center'\n          background='brand'\n          color='text'\n        >\n          No\n          </Box>\n        </Box>\n      </Link>\n\n    </Box>\n  );\n}\n\n\nexport default SafeLoad;\n","import React, { useEffect, useState } from 'react';\nimport { \n  Anchor,\n  Box, \n  Button,\n  CheckBox, \n  Collapsible,\n  Heading, \n  Select,\n  Text,\n  TextInput,\n  Form\n} from 'grommet';\nimport { \n  Code, \n  Configure,\n  Edit,\n  Secure,\n  Tag \n} from 'grommet-icons';\n\n\nconst MainContent = (props) => {\n\n  const [showSettings, setShowSettings] = useState(false);\n  const [showCustomURL, setShowCustomURL] = useState(false);\n  const [isPrivate, setIsPrivate] = useState(false);\n  const [showMaxReferences, setShowMaxReferences] = useState(false);\n  const [showRandomizer, setShowRandomizer] = useState(false);\n  const [CustomURL, setCustomURL] = useState('');\n  const [MaxReferences, setMaxReferences] = useState(-1);\n  const [Randomizer, setRandomizer] = useState(1);\n\n  const [URLInput, setURLInput] = useState('');\n  const [myURL, setURL] = useState('');\n\n\n  const [showResult, setShowResult] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const [createdUrl, setCreatedUrl] = useState(`${props.domain}`);\n\n  const randomOptions = [\n    { label: 'Default', value: 1 },\n    { label: 'Uppercase', value: 2 },\n    { label: 'Lowercase', value: 3 },\n    { label: 'Numbers', value: 4 },\n  ];\n\n  useEffect(() => {\n    document.title = \"pvsURL\";\n  })\n\n  useEffect(() => {\n    createShortUrl();\n  }, [myURL]);\n\n  const createShortUrl = async () => {\n    var base = `/api/create?url=${myURL}`;\n    if(showCustomURL){\n      base= base + `&custom=${CustomURL}`;\n    }\n    if(isPrivate){\n      base= base + \"&private=1\";\n    }\n    if(showMaxReferences){\n      base=base + `&refs_available=${MaxReferences}`;\n    }\n    if(showRandomizer){\n      base=base + `&random_method=${Randomizer.value}`;\n    }else{\n      base=base + `&random_method=1`;\n    }\n    if(myURL.length>4){\n    try{\n      const response = await fetch(base, {method: 'GET',\n          mode: 'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          redirect: 'follow', // manual, *follow, error\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        });\n      const dataUrl = await response.json();\n      setMessage(dataUrl.message);\n      if(dataUrl.hasOwnProperty('url')){\n        setCreatedUrl(dataUrl.url);\n      }\n    } catch(error){\n      setMessage(\"Error connecting to Backend\")\n    }\n    \n    }\n    console.log(Randomizer);\n  };\n\n  \n\n  const updateURL = e => {\n    setURLInput(e.target.value);\n  };\n  const updateMaxRef = e => {\n    setMaxReferences(e.target.value);\n  };\n  const updateCustomURL = e => {\n    setCustomURL(e.target.value);\n  };\n  \n  const getURL = e => {\n    e.preventDefault();\n    setURL(URLInput);\n    setShowResult(true);\n  };\n\n  return(\n  <Box\n  flex\n  align='center'\n  justify='center'\n  gap='medium'\n  >\n    \n    <Heading level='1'>PerVerSo Shorter URLs</Heading>\n    <Box direction='row' gap='small'>\n\n    <Button \n      icon={<Configure color='text'/>}\n      color='brand'\n      size='small'\n      onClick={() => {setShowSettings(!showSettings);\n      setShowCustomURL(false);\n      setIsPrivate(false);\n      setShowMaxReferences(false);\n      setShowRandomizer(false);\n      }}\n    />\n    \n    <Box\n      width=\"large\"\n      direction=\"row\"\n      align=\"center\"\n      pad={{ horizontal: 'small', vertical: 'xsmall' }}\n      round=\"small\"\n      border={{\n        side: 'all',\n        color: 'brand',\n      }}\n    >\n      <Code color='brand'/>\n      <TextInput \n      plain\n      placeholder='Enter your URL...'\n      onChange={updateURL}\n      /> \n    </Box>\n\n      <Form onSubmit={getURL}>\n        <Button\n          label='Shorten'\n          type='submit'\n          fill='true'\n        />\n      </Form>\n      \n    </Box>\n\n    <Collapsible direction='vertical' open={showResult}>\n      <Box\n      width='large'\n      >\n        \n        {(() => {\n          if (createdUrl.length>0) {\n            return (\n              <Text size='medium' color='brand'>Your URL <Anchor href={createdUrl} label={createdUrl} color='brand'/> was created</Text>\n            )\n          } else {\n            return (\n              <Text size='medium' color='test'>{message}</Text>\n            )\n          } \n          })()}\n        \n      </Box>\n    </Collapsible>\n\n    <Collapsible direction='vertical' open={showSettings}>\n      <Box\n      flex\n      direction='column'\n      align='center'\n      justify='center'\n      gap='medium'\n      >\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"center\"\n          gap='medium'\n        >\n          <CheckBox\n            toggle\n            label='Custom tag'\n            onClick={() => setShowCustomURL(!showCustomURL)}\n          />\n          <Collapsible direction='horizontal' open={showCustomURL}>\n            <Box width='large' direction='row' justify='end'>\n              <Box\n                width=\"medium\"\n                direction=\"row\"\n                align=\"center\"\n                justify='end'\n                pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                round=\"small\"\n                border={{\n                  side: 'all',\n                  color: 'brand',\n                }}\n              >\n                <Tag color='brand'/>\n                <TextInput \n                plain\n                placeholder='Enter custom tag...'\n                onChange={updateCustomURL}\n                /> \n              </Box>\n            </Box>\n          </Collapsible>\n        </Box>\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"center\"\n          gap='medium'\n        >\n          <CheckBox\n            toggle\n            label='Set max. references'\n            onClick={() => setShowMaxReferences(!showMaxReferences)}\n          />\n          <Collapsible direction='horizontal' open={showMaxReferences}>\n            <Box width='large' direction='row' justify='end'>\n              <Box\n                width=\"medium\"\n                direction=\"row\"\n                align=\"center\"\n                justify='end'\n                pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                round=\"small\"\n                border={{\n                  side: 'all',\n                  color: 'brand',\n                }}\n              >\n                <Edit color='brand'/>\n                <TextInput \n                plain\n                placeholder='Enter max. References...'\n                onChange={updateMaxRef}\n                /> \n              </Box>\n            </Box>\n          </Collapsible>\n        </Box>\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"start\"\n          gap='small'\n        >\n          <CheckBox\n            toggle\n            label='Is private'\n            onClick={() => setIsPrivate(!isPrivate)}\n          />\n          <Collapsible direction='horizontal' open={isPrivate}>\n            <Secure color='brand'/>\n          </Collapsible>\n        </Box>\n        <Box\n          width=\"large\"\n          direction=\"row\"\n          align=\"center\"\n          gap='medium'\n        >\n          <CheckBox\n            toggle\n            label='Special randomizer'\n            onClick={() => setShowRandomizer(!showRandomizer)}\n          />\n          <Collapsible direction='horizontal' open={showRandomizer}>\n            <Box width='large' direction='row' justify='end'>\n              <Box\n                width=\"medium\"\n                direction=\"row\"\n                align=\"center\"\n                justify='start'\n                pad={{ horizontal: 'small', vertical: 'xsmall' }}\n                round=\"small\"\n                border={{\n                  side: 'all',\n                  color: 'brand',\n                }}\n              >\n                <Tag color='brand'/>\n                <Select \n                placeholder='Select randomizer...'\n                options={randomOptions}\n                labelKey=\"label\"\n                valueKey=\"value\"\n                onChange={({ option }) => setRandomizer(option)}\n                dropHeight='small'\n                plain\n                />\n              </Box>\n            </Box>\n          </Collapsible>\n        </Box>\n      \n      </Box>\n    </Collapsible>\n\n  </Box>\n  );\n}\n\nexport default MainContent;","import React, { useState, useEffect } from 'react';\nimport { \n  Box, \n  Button,\n  Card,\n  CardBody,\n  Collapsible,\n  Layer,\n  Heading, \n  Text\n} from 'grommet';\nimport { \n  BarChart,\n  Cart,\n  FormClose,\n  Info\n} from 'grommet-icons';\n\n\n\nconst Sidebar = (props) => {\n  const [showWissen, setShowWissen] = useState(false);\n  const [showProducts, setShowProducts] = useState(false);\n\n  useEffect(() => {\n    getStatistics();\n  }, [props.showStatistics])\n\n  const getStatistics = async ()=> {\n    const response = await fetch(`/api/statistics`)\n    const dataStat = await response.json();\n    props.setStatistics(dataStat);\n  }\n  \n  return(<Collapsible direction='horizontal' open={props.showSidebar}>\n  <Box\n  flex\n  width='medium'\n  background='dark'\n  elevation='small'\n  align='center'\n  justify='start'\n  gap='medium'\n  >\n    <Heading level='2'>Wissenswertes</Heading>\n    <Card onClick={()=>setShowWissen(!showWissen)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Info color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              PerVerSo Historie\n            </Text>\n            <Text size='medium'>Wie alles begann</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n\n\n    <Card onClick={()=>setShowProducts(!showProducts)}>\n      <CardBody>\n      <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <Cart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              PerVerSo Produkte\n            </Text>\n            <Text size='medium'>Produktportfolio</Text>\n          </Box>\n        </Box>\n      </CardBody>\n    </Card>\n\n    <Card onClick={()=>props.setShowStatistics(!props.showStatistics)}>\n      <CardBody>\n        <Box flex direction='row' width='medium'>\n          <Box justify='center' align='center' pad='medium'>\n            <BarChart color='brand' size='large'/>\n          </Box>\n          <Box justify='center' align=\"start\" direction=\"column\" pad=\"large\" >\n            <Text size='medium' weight=\"bold\">\n              Statistiken\n            </Text>\n            <Text size='medium'>Lass dir die TOP 10 der verkürzten Links anzeigen.</Text>\n          </Box>\n        </Box>\n\n      </CardBody>\n    </Card>\n    \n    <Collapsible open={showWissen}>\n      <Layer>\n        <Box>\n            <Button\n            icon={<FormClose color='lightgrey'/>}\n            onClick={()=>setShowWissen(false)}\n            />\n          </Box>\n          <Box pad='full' justify='center' gap='medium' margin='medium'>\n            <Heading level='2'>Entstehung</Heading>\n            <Text size='medium'>\n              PerVerSo war ursprünglich ein studentisches Softwareprojekt für eine Personalverwaltungssoftware. Im Laufe der Zeit kamen weitere Projekte hinzu, sodass sich PerVerSo nach und nach zu einer Marke etabliert hat.\n              Für die Entwicklergruppe steht dabei stets der Nutzende im Vordergrund, wobei ein gewisser Humor nicht verloren gegangen ist.\n            </Text>\n          </Box>\n\n      </Layer>\n    </Collapsible>\n\n    <Collapsible open={props.showStatistics}>\n      <Layer>\n        <Box>\n            <Button\n            icon={<FormClose color='lightgrey'/>}\n            onClick={()=>props.setShowStatistics(false)}\n            />\n          </Box>\n          <Box pad='full' justify='center' gap='medium' margin='medium' overflow={{\"vertical\": \"scroll\"}}>\n            {props.statistics.map(entry => (\n              <Card>\n                <CardBody>\n                  <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n                      <Box onClick={() => window.open(entry.reference)}>\n                        <Text size='large' weight=\"bold\" color='test'>\n                          {entry.short} </Text><Text size='large' weight='bold'>mit {entry.frequency} Aufrufen</Text>\n                        <Text size='medium'>Dieser Tag referenziert auf {entry.reference}</Text>\n                      </Box>\n                  </Box>\n                </CardBody>\n              </Card>\n            ))}\n          </Box>\n\n      </Layer>\n    </Collapsible>\n\n\n    <Collapsible open={showProducts}>\n      <Layer>  \n        <Box>\n          <Button\n          icon={<FormClose color='lightgrey'/>}\n          onClick={()=>setShowProducts(false)}\n          />\n        </Box>\n        <Box pad='full' align='center' justify='center' gap='medium' margin='medium' overflow={{\"vertical\": \"scroll\"}}> \n          <Heading level='2'>Produkte von PerVerSo</Heading>\n        <Card>\n          <CardBody>\n          <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n            <Box>\n              <Text size='large' weight=\"bold\">\n                PerVerSo\n              </Text>\n              <Text size='medium'>Personalverwaltungssoftware, basierend auf Java</Text>\n            </Box>\n          </Box>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n          <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n            <Box>\n              <Text size='large' weight=\"bold\">\n                PerVerSo MSO\n              </Text>\n              <Text size='medium'>Personalverwaltungssoftware, implementiert in Microsoft Excel</Text>\n            </Box>\n          </Box>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n          <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n            <Box>\n              <Text size='large' weight=\"bold\">\n                PerVerSo MSO AEP\n              </Text>\n              <Text size='medium'>Personalverwaltungssoftware, in Microsoft Excel zur Einsatzplanung von Auszubildenden</Text>\n            </Box>\n          </Box>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n          <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'>\n            <Box>\n              <Text size='large' weight=\"bold\">\n                Weatherplans\n              </Text>\n              <Text size='medium'>Wettervorhersage zum Testen von APIs</Text>\n            </Box>\n          </Box>\n          </CardBody>\n        </Card>\n        <Card>\n          <CardBody>\n          <Box gap=\"small\" align=\"center\" direction=\"row\" pad=\"large\" width='large'> \n            <Box>\n              <Text size='large' weight=\"bold\">\n                OLE (Kooperation)\n              </Text>\n              <Text size='medium'>Der Online LaTeX Editor mit kollaborativen Möglichkeiten zum Selfhosting</Text>\n            </Box>\n          </Box>\n          </CardBody>\n        </Card>\n        </Box>\n      </Layer> \n    </Collapsible>\n    \n\n  </Box>\n</Collapsible>)\n}\n\nexport default Sidebar;","import React from 'react';\nimport { \n\n  Box,\n  Button,\n  CheckBox\n\n} from 'grommet';\nimport { Menu } from 'grommet-icons';\n\nconst AppBar = (props) => (\n    <Box\n      tag='header'\n      direction='row'\n      align='center'\n      justify='between'\n      background='brand'\n      pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n      elevation='medium'\n      style={{ zIndex: '1' }}\n      {...props}\n  >\n    <Button \n      icon={<Menu color='lightgrey'/>}\n      onClick={() => props.setShowSidebar(!props.showSidebar)}\n    />\n    <Button \n      label='Help'\n      onClick={() => props.setShowHelp(!props.showHelp)}\n    />\n    <CheckBox \n      toggle \n      label=\"View\" \n      onClick={() => props.setDarkmode(!props.darkMode)\n    }/>\n  </Box>\n);\n\nexport default AppBar;","import { \n    \n    Box,\n    Button,\n    Collapsible,\n    Heading,\n    Layer,\n    Text,\n    TextArea\n\n } from 'grommet';\n import { FormClose } from 'grommet-icons';\nimport React from 'react';\n\nconst Help = props => {\n    return(\n    <Collapsible direction='horizontal' open={props.showHelp}>\n        <Layer>\n        <Box>\n            <Button\n            icon={<FormClose color='lightgrey'/>}\n            onClick={()=>props.setShowHelp(false)}\n            />\n        </Box>\n        <Box margin='medium' overflow={{\"vertical\": \"scroll\"}}>\n            <Heading level='2'>AnleitungA</Heading>\n            <Text>Geben Sie die gewünschte <b>URL</b> in das Eingabefeld ein und drücken Sie anschließend auf <b>shorten</b>. Es wird eine zufällige kurze URL mit der Domain perver.so erzeugt.\n            Möchten Sie einen eigenen Namen wählen oder die Konditionen verändern, drücken Sie bitte auf das <b>Werkzeug-Symbol</b> links vom Eingabefeld. Es öffnen sich nun weitere Optionen:<br />\n            <br /><b>Custom Tag:</b> Wenn Sie den Schalter nach rechts schieben (anklicken), können Sie im neuen Eingabefeld einen eigenen URL Tag angeben. (https://perver.so/[ihr persönlicher tag])\n            <br/><br/><b>Max References:</b> Wenn diese Option gewählt ist, können Sie die Nutzungszahl für den erstellenden Link angeben. Nachdem das Limit erreicht wurde, wird Ihre URL überschrieben, das Tag bleibt jedoch bestehen.\n            <br/><br/><b>Private:</b> Wenn diese Option gewählt ist, wird die gekürzte URL nicht in der Statistik erfasst. Wenn neben der Option ein Schloss erscheint, ist der Link privat.\n            <br/><br/><b>Special Randomizer:</b> Wenn diese Option gewählt ist, können Optionen für die zufällige Tag Vergabe gewählt werden:\n            <br/>- Default (Großbuchstaben, Kleinbuchstaben, Zahlen) [1]\n            <br/>- nur Großbuchstaben [2]\n            <br/>- nur Kleinbuchstaben [3]\n            <br/>- nur Zahlen [4]\n            <br/><br/><b>API:</b> Wollen Sie die API nutzen, so können Sie einen GET Request an https://perver.so/api/create stellen.\n            <br/><b>Parameter:</b>\n            <br/>-url [required] string\n            <br/>-custom [optional] string \n            <br/>-private [optional] 0 oder 1\n            <br/>-refs_available [optional] int (default= -1)\n            <br/>-random_method [optional] int (default= 1)\n            <br/><br/><b>Sample Request:</b>\n            <br/>GET https://perver.so/api/create?url=https://perver.so&custom=foo</Text>\n        </Box>\n        </Layer>\n    </Collapsible>\n    )\n}\n\nexport default Help;","import React from 'react';\nimport {\n    Box,\n    Image,\n    Footer,\n    Text\n} from 'grommet';\n\n\nconst AppFooter = props => {\n\n    return(\n        <Footer background=\"brand\" justify=\"center\" pad=\"small\">\n        <Text textAlign=\"center\" size=\"medium\" color='lightgrey'>\n          © 2021 Copyright PerVerSo\n        </Text>\n        <Box\n        direction='row'\n        justify='end'\n        >\n          <Image src=\"/images/logo\"/>\n        </Box>\n      </Footer>\n    )\n\n}\n\nexport default AppFooter;","export const pvsTheme = {\n    global: {\n      drop:{\n        background: '#444444',\n        shadowSize: 'medium',\n      },\n      elevation: {\n        dark: {\n          medium: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n        },\n        light: {\n          medium: '0 10px 20px rgba(0,0,0,0.19), 0 6px 6px rgba(0,0,0,0.23)',\n        },\n      },\n      colors: {\n        brand: '#6496FA',\n        test: 'red',\n        text: {\n          dark: 'light-1',\n          light: 'dark-1'\n        },\n      },\n      font: {\n        family: 'Arial',\n        size: '20px',\n        height: '20px'\n      },\n      input: {\n        weight: 400,\n      },\n    },\n    checkBox:{\n      hover:{\n        border:{\n          color:'brand'\n        },\n      },\n      color:{\n        dark: 'brand',\n      },\n      border:{\n        color: 'brand'\n      },\n      toggle:{\n        color:{\n          light: 'brand'\n        },\n      },\n    },\n    card: {\n      container: {\n        background: {dark:'dark-2',\n                    light: 'light-2'},\n        elevation: 'none',\n      },\n      footer: {\n        background: {dark: 'dark-3',\n        light: 'light-3'}\n      },\n    },\n    button: {\n      border:{\n        radius: '12px',\n      },\n      default: {\n        background:{\n          color: 'brand',\n        },\n        color:{dark:'light-1', light: 'dark-1'},\n      },\n      \n    },\n  };","import React, { useState } from 'react';\nimport { \n  Box,\n  Grommet\n} from 'grommet';\n\nimport Outdated from './sites/outdated'\nimport NotFound from './sites/notFound'\nimport SafeLoad from './sites/safeLoad'\n\nimport MainContent from './components/MainContent'\nimport Sidebar from './components/Sidebar'\nimport AppBar from './components/AppBar'\nimport Help from './components/Help'\nimport AppFooter from './components/AppFooter'\n\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { pvsTheme } from './theme/theme'\n\n\n\nconst App = () => {\n  const [showStatistics, setShowStatistics] = useState(false);\n  const [statistics, setStatistics] = useState([]);\n  const [showSidebar, setShowSidebar] = useState(false);\n  const [showHelp, setShowHelp] = useState(false);\n  const [darkMode, setDarkmode] = useState(true);\n\n  return (\n        <Grommet theme={ pvsTheme } themeMode={darkMode ? \"dark\" : \"light\"} full>  \n          <Box background={darkMode ? \"dark-1\" : \"light-1\"} fill>\n            <AppBar \n              setShowSidebar={setShowSidebar}\n              showSidebar={showSidebar}\n              setShowHelp={setShowHelp}\n              showHelp={showHelp}\n              darkMode={darkMode}\n              setDarkmode={setDarkmode}\n            />\n\n            \n            <Box flex direction='row' overflow={{ horizontal: 'hidden' }} gap='medium'>\n              <Sidebar \n                showSidebar={showSidebar}\n                showStatistics={showStatistics}\n                setShowStatistics={setShowStatistics}\n                setStatistics={setStatistics}\n                statistics={statistics}\n              />\n              \n              <Router>\n                <Switch>\n                  <Route path=\"/\" exact component={MainContent} />\n                  <Route path=\"/error/404\" component={NotFound}/>\n                  <Route path=\"/:id/outdated\" component={Outdated}/>\n                  <Route path=\"/:url/safeView\" component={SafeLoad}/>\n                </Switch>\n\n              </Router>\n\n            </Box>\n\n            <Help \n              setShowHelp={setShowHelp}\n              showHelp={showHelp}\n            />\n\n\n\n            \n\n          </Box>\n          <AppFooter/>\n    </Grommet>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}